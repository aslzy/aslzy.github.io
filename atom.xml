<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小皮博客 | Xiaopi&#39;s Blog</title>
  
  <subtitle>没有人的梦想会更卑微,做点什么让自己骄傲</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.xiaoyuyu.net/"/>
  <updated>2020-05-31T15:12:02.883Z</updated>
  <id>http://blog.xiaoyuyu.net/</id>
  
  <author>
    <name>盛领</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>99-跨域请求详解</title>
    <link href="http://blog.xiaoyuyu.net/post/2b54d784.html"/>
    <id>http://blog.xiaoyuyu.net/post/2b54d784.html</id>
    <published>2020-05-31T07:20:08.000Z</published>
    <updated>2020-05-31T15:12:02.883Z</updated>
    
    <content type="html"><![CDATA[<p>以前每次遇到跨域的问题，都是case by case解决掉了，从来没有系统的分析过这里面的原理，这次整理一下各种框架和情况下会遇到的问题。</p><a id="more"></a><h1 id="跨域问题解释"><a href="#跨域问题解释" class="headerlink" title="跨域问题解释"></a>跨域问题解释</h1><p>跨域访问，是指浏览器在一个网站下不能执行其他网站的脚本，它是由浏览器的同源策略造成的，是浏览器对JavaScript试试的安全限制。</p><p>同源策略限制了以下行为：</p><ul><li>Cookie、LocalStorage和IndexDB无法读取。</li><li>DOM和JS对象无法获取。</li><li>Ajax请求发送不出去。</li></ul><h1 id="跨域场景说明"><a href="#跨域场景说明" class="headerlink" title="跨域场景说明"></a>跨域场景说明</h1><p>跨域的反义词是同源，那么同源是指的域名、端口、协议均相同。</p><blockquote><p><a href="http://www.xiaoyuyu.net/index.html" target="_blank" rel="noopener">http://www.xiaoyuyu.net/index.html</a> 调用 <a href="http://www.xiaoyuyu.net/helloworld.do" target="_blank" rel="noopener">http://www.xiaoyuyu.net/helloworld.do</a> 非跨域</p></blockquote><blockquote><p><a href="http://www.xiaoyuyu.net/index.html" target="_blank" rel="noopener">http://www.xiaoyuyu.net/index.html</a> 调用 <a href="http://www.baidu.com/helloworld.do" target="_blank" rel="noopener">http://www.baidu.com/helloworld.do</a> 跨域，主域名不同。</p></blockquote><blockquote><p><a href="http://www.xiaoyuyu.net/index.html" target="_blank" rel="noopener">http://www.xiaoyuyu.net/index.html</a> 调用 <a href="http://blog.xiaoyuyu.net/hello.do">http://blog.xiaoyuyu.net/hello.do</a> 跨域，子域名不同。</p></blockquote><blockquote><p><a href="http://www.xiaoyuyu.net/index.html" target="_blank" rel="noopener">http://www.xiaoyuyu.net/index.html</a> 调用 <a href="http://www.xiaoyuyu.net:8080/hello.do" target="_blank" rel="noopener">http://www.xiaoyuyu.net:8080/hello.do</a> 跨域，端口不同</p></blockquote><blockquote><p><a href="http://www.xiaoyuyu.net/index.html" target="_blank" rel="noopener">http://www.xiaoyuyu.net/index.html</a> 调用 <a href="https://www.xiaoyuyu.net/hello.do" target="_blank" rel="noopener">https://www.xiaoyuyu.net/hello.do</a> 跨域，协议不同</p></blockquote><blockquote><p>localhost 调用127.0.0.1 跨域，IP不同(浏览器并不会去查路由表)</p></blockquote><h1 id="解决方案-降低浏览器安全策略"><a href="#解决方案-降低浏览器安全策略" class="headerlink" title="解决方案-降低浏览器安全策略"></a>解决方案-降低浏览器安全策略</h1><p>由于跨域限制是浏览器行为，所以首先可以通过降低浏览器安全策略的方式来进行调试。这种方式适用于联调阶段且生产环境最后是同源的情况。比如开发在本地进行联调，最后代码会部署到同源的服务器上。这样做的意义在于不要为了解决跨域问题引入跨站攻击(当然跨站攻击应该额外防御)。</p><h2 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h2><blockquote><p>mkdir ~/.chrome-config-for-cors # 文件夹是用来保存关闭安全策略后的用户信息的</p></blockquote><blockquote><p>open -n /Applications/Google\ Chrome.app/ –args –disable-web-security –user-data-dir=~/.chrome-config-for-cors  </p></blockquote><h2 id="Firefox"><a href="#Firefox" class="headerlink" title="Firefox"></a>Firefox</h2><ul><li>进入浏览器配置页，浏览器地址栏输入： about:config</li><li>点击我了解此风险。</li><li>搜索 security.fileuri.strict_origin_policy, 设置为false</li><li>重启浏览器</li></ul><h1 id="跨域解决方案-技术方案"><a href="#跨域解决方案-技术方案" class="headerlink" title="跨域解决方案-技术方案"></a>跨域解决方案-技术方案</h1><p>如果本来就需要使用非同源策略来进行最终的生产环境部署，那么我们不应该采用上面的策略。</p><h2 id="JSONP跨域"><a href="#JSONP跨域" class="headerlink" title="JSONP跨域"></a>JSONP跨域</h2><p>jsonp跨域其实也是JavaScript设计模式中的一种代理模式，在HTML页面中通过相应的标签从不同域名下加载静态资源文件是被浏览器允许的，所以可以用这种方式先绕过跨域限制。一般我们可以动态的创建Script标签，再去请求一个带参数网址来实现跨域通信。</p><h3 id="原生方式实现"><a href="#原生方式实现" class="headerlink" title="原生方式实现"></a>原生方式实现</h3><pre>let script = document.createElement('script');script.src = 'http://www.xiaoyuyu.net/login?username=shengl&callback=callback';document.body.appendChild(script);function callback(res) {    console.log(res);}</pre><h3 id="JQuery方式实现"><a href="#JQuery方式实现" class="headerlink" title="JQuery方式实现"></a>JQuery方式实现</h3><pre>$.ajax({    url: "http://www.xiaoyuyu.net/login',    type: "GET",    dataType: "jsonp", // 请求方式为jsonp    jsonpCallback: "callback",    data: {        "username": "shengl"    }})</pre><p>使用JSONP只能满足GET请求。</p><h2 id="document-domain-iframe跨域"><a href="#document-domain-iframe跨域" class="headerlink" title="document.domain + iframe跨域"></a>document.domain + iframe跨域</h2><p>这种跨域方式主要要求主域名相同。<br>假设a.xiaoyuyu.net和b.xiaoyuyu.net分别指向不同ip的服务器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">// a.xiaoyuyu.net/text.html</span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>html<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span> = <span class="string">"jquery-1.12.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>A页面<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">style</span> = <span class="string">"display : none"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">name</span> = <span class="string">"iframe1"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">id</span> = <span class="string">"iframe"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"http://b.xiaoyuyu.net/1.html"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        $(function()&#123;</span></span><br><span class="line"><span class="undefined">            try&#123;</span></span><br><span class="line"><span class="undefined">                document.domain = "xiaoyuyu.net"</span></span><br><span class="line"><span class="undefined">            &#125;catch(e)&#123;&#125;</span></span><br><span class="line"><span class="undefined">            $("#iframe").load(function()&#123;</span></span><br><span class="line"><span class="undefined">                var jq = document.getElementById('iframe').contentWindow.$</span></span><br><span class="line"><span class="undefined">                jq.get("http:/xiaoyuyu.net/test.json",function(data)&#123;</span></span><br><span class="line"><span class="undefined">                    console.log(data);</span></span><br><span class="line"><span class="undefined">                &#125;);</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="跨域资源共享CORS"><a href="#跨域资源共享CORS" class="headerlink" title="跨域资源共享CORS"></a>跨域资源共享CORS</h2><p>目前主流的跨域解决方案</p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li>CORS是一个W3C标准，全称是“跨域资源共享”(Cross-Origin Resource Sharing)。他允许浏览器向跨院服务器发出XMLHttpRequest请求，从而克制AJAX只能同源使用的限制。  </li><li>CORS需要浏览器和服务器同时支持，IE8以下不能支持，IE8/IE9需要使用XDomainRequest对象来支持CORS。</li><li>整个CORS通信过程都是浏览器自动完成，不需要用户参与。对于开发者来说，CORS通信与同源的AJAX通信没有差别。浏览器一旦发现AJAX请求跨源，就会自动添加一些附加的头信息，有时候还会多出一次附加请求。</li></ul><h3 id="两种请求"><a href="#两种请求" class="headerlink" title="两种请求"></a>两种请求</h3><p>在此场景下分为两种请求，一种是简单请求，一种是非简单请求。简单请求的条件如下:</p><ul><li>请求方式为HEAD、POST或者GET。</li><li>http头信息不超过以下字段：Accept、Accept-Language、Content-Language、Last-Event-ID、Content-Type(限于三个值: application/x-www-form-urlencoded、multipart/form-data、text/plain)</li><li>浏览器对于简单请求和非简单请求的处理方式不同。</li></ul><h3 id="简单请求基本流程"><a href="#简单请求基本流程" class="headerlink" title="简单请求基本流程"></a>简单请求基本流程</h3><p>对于简单请求，浏览器直接发出CORS请求。具体来说，就是在头信息中加一个origin字段。下面是一个例子，浏览器发现这次跨源AJAX请求是简单请求，就自动在头信息之中，添加一个Origin字段。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET /cors HTTP/1.1</span><br><span class="line">Origin: http://api.bob.com</span><br><span class="line">Host: api.alice.com</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0</span><br></pre></td></tr></table></figure><p>Origin字段用来说明，本次请求来自哪个源(协议+域名+端口)。服务器根据这个值，决定是否同意这次请求。<br>如果Origin指定的源，不在许可范围内，服务器会返回一个正常的HTTP回应。浏览器发现这个回应的头信息没有包含Access-Control-Allow-Origin字段，就知道出错了，从而抛出一个错误，被XMLHttpRequest的onerror回调捕获。<br>这种错误无法通过状态码识别。因为HTTP返回码有可能是200.<br>如果Origin指定的域名在许可范围内，服务器返回的响应，会多出几个头信息字段。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">   Access-Control-Allow-Credentials: true</span><br><span class="line">   Access-Control-Expose-Headers: FooBar</span><br><span class="line">   Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure><p>上面的头信息之中，有三个与CORS请求相关的字段，都以Access-Control-开头</p><p>Access-Control-Allow-Origin :该字段是必须的。它的值要么是请求时Origin字段的值，要么是一个*，表示接受任意域名的请求<br>Access-Control-Allow-Credentials: 该字段可选。它的值是一个布尔值，表示是否允许发送Cookie。默认情况下，Cookie不包括在CORS请求之中。设为true，即表示服务器明确许可，Cookie可以包含在请求中，一起发给服务器。这个值也只能设为true，如果服务器不要浏览器发送Cookie，删除该字段即可。<br>Access-Control-Expose-Headers:该字段可选。CORS请求时，XMLHttpRequest对象的getResponseHeader()方法只能拿到6个基本字段：Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma。如果想拿到其他字段，就必须在Access-Control-Expose-Headers里面指定  </p><h4 id="withCredentials-属性"><a href="#withCredentials-属性" class="headerlink" title="withCredentials 属性"></a>withCredentials 属性</h4><p>上面说到，CORS请求默认不发送Cookie和HTTP认证信息。如果要把Cookie发到服务器，一方面要服务器同意，指定Access-Control-Allow-Credentials字段。<br>另一方面，开发者必须在AJAX请求中打开withCredentials属性。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest(); <span class="comment">// IE8/9需用window.XDomainRequest兼容</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">xhr.open(<span class="string">'post'</span>, <span class="string">'http://www.domain2.com:8080/login'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.setRequestHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">xhr.send(<span class="string">'user=admin'</span>);</span><br><span class="line"></span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">        alert(xhr.responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// jquery</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    ...</span><br><span class="line">   xhrFields: &#123;</span><br><span class="line">       withCredentials: <span class="literal">true</span>    <span class="comment">// 前端设置是否带cookie</span></span><br><span class="line">   &#125;,</span><br><span class="line">   crossDomain: <span class="literal">true</span>,   <span class="comment">// 会让请求头中包含跨域的额外信息，但不会含cookie</span></span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>否则即使服务器同意发送cookie，浏览器也不会发送。或者服务器要求设置Cookie，浏览器也不会处理。但是如果省略withCredentials设置，有的浏览器还是会一起发送Cookie。这时可以显式关闭withCredentials。<br>需要注意的是，如果要发送cookie，Access-Control-Allow-Origin就不能设置为星号，必须指定明确的，与请求网页一致的域名。同时Cookie依然需要遵循同源策略，只有用服务器域名设置的Cookie才会上传，其他域名的Cookie并不会上传，且（跨源）原网页代码中的document.cookie也无法读取服务器域名下的Cookie。</p><h3 id="非简单请求"><a href="#非简单请求" class="headerlink" title="非简单请求"></a>非简单请求</h3><p>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json。<br>非简单请求的CORS请求，会在正式通信之前，增加一次HTTP查询请求，称为”预检”请求（preflight）。<br>浏览器先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些HTTP动词和头信息字段。只有得到肯定答复，浏览器才会发出正式的XMLHttpRequest请求，否则就报错。  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">'http://api.alice.com/cors'</span>;</span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.open(<span class="string">'PUT'</span>, url, <span class="literal">true</span>);</span><br><span class="line">xhr.setRequestHeader(<span class="string">'X-Custom-Header'</span>, <span class="string">'value'</span>);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure><p>浏览器发现，这是一个非简单请求，就自动发出一个“预检”请求。要求服务器确认可以这样请求。下面是这个“预检”请求的HTTP头信息。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS /cors HTTP/1.1</span><br><span class="line">Origin: http://api.bob.com</span><br><span class="line">Access-Control-Request-Method: PUT</span><br><span class="line">Access-Control-Request-Headers: X-Custom-Header</span><br><span class="line">Host: api.alice.com</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0...</span><br><span class="line">``` </span><br><span class="line">"预检"请求用的请求方法是OPTIONS，表示这个请求是用来询问的。头信息里面，关键字段是Origin，表示请求来自于哪个源。</span><br><span class="line">* Access-Control-Request-Method: 该字段是必须的，用来列出浏览器的CORS请求会用到哪些HTTP方法，比如这里的PUT。</span><br><span class="line">* Access-Control-Request-Headers：该字段是一个逗号分隔的字符串，指定浏览器CORS请求会额外发送的头信息字段，上例是X-Custom-Header</span><br><span class="line"></span><br><span class="line">#### 预检请求的回应</span><br><span class="line">服务器收到"预检"请求以后，检查了Origin、Access-Control-Request-Method和Access-Control-Request-Headers字段以后，确认允许跨源请求，就可以做出回应</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 01 Dec 2008 01:15:39 GMT</span><br><span class="line">Server: Apache/2.0.61 (Unix)</span><br><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Access-Control-Allow-Methods: GET, POST, PUT</span><br><span class="line">Access-Control-Allow-Headers: X-Custom-Header</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br><span class="line">Content-Encoding: gzip</span><br><span class="line">Content-Length: 0</span><br><span class="line">Keep-Alive: timeout=2, max=100</span><br><span class="line">Connection: Keep-Alive</span><br><span class="line">Content-Type: text/plain</span><br></pre></td></tr></table></figure><p>上面的HTTP回应中，关键的是Access-Control-Allow-Origin字段，表示<a href="http://api.bob.com可以请求数据。该字段也可以设为星号，表示同意任意跨源请求。" target="_blank" rel="noopener">http://api.bob.com可以请求数据。该字段也可以设为星号，表示同意任意跨源请求。</a><br>如果浏览器否定了”预检”请求，会返回一个正常的HTTP回应，但是没有任何CORS相关的头信息字段。这时，浏览器就会认定，服务器不同意预检请求，因此触发一个错误，被XMLHttpRequest对象的onerror回调函数捕获。控制台会打印出如下的报错信息。<br>服务器回应的其他CORS相关字段如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Methods: GET, POST, PUT</span><br><span class="line">Access-Control-Allow-Headers: X-Custom-Header</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Max-Age: 1728000</span><br></pre></td></tr></table></figure><ul><li>Access-Control-Allow-Methods：该字段必需，它的值是逗号分隔的一个字符串，表明服务器支持的所有跨域请求的方法。注意，返回的是所有支持的方法，而不单是浏览器请求的那个方法。这是为了避免多次”预检”请求。</li><li>Access-Control-Allow-Headers：如果浏览器请求包括Access-Control-Request-Headers字段，则Access-Control-Allow-Headers字段是必需的。它也是一个逗号分隔的字符串，表明服务器支持的所有头信息字段，不限于浏览器在”预检”中请求的字段。</li><li>Access-Control-Allow-Credentials： 该字段与简单请求时的含义相同。</li><li>Access-Control-Max-Age： 该字段可选，用来指定本次预检请求的有效期，单位为秒。上面结果中，有效期是20天（1728000秒），即允许缓存该条回应1728000秒（即20天），在此期间，不用发出另一条预检请求。</li></ul><h4 id="浏览器正常请求回应"><a href="#浏览器正常请求回应" class="headerlink" title="浏览器正常请求回应"></a>浏览器正常请求回应</h4><p>一旦服务器通过了”预检”请求，以后每次浏览器正常的CORS请求，就都跟简单请求一样，会有一个Origin头信息字段。服务器的回应，也都会有一个Access-Control-Allow-Origin头信息字段。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PUT /cors HTTP/1.1</span><br><span class="line">Origin: http://api.bob.com</span><br><span class="line">Host: api.alice.com</span><br><span class="line">X-Custom-Header: value</span><br><span class="line">Accept-Language: en-US</span><br><span class="line">Connection: keep-alive</span><br><span class="line">User-Agent: Mozilla/5.0...</span><br></pre></td></tr></table></figure><p>浏览器的正常CORS请求。上面头信息的Origin字段是浏览器自动添加的。下面是服务器正常的回应。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://api.bob.com</span><br><span class="line">Content-Type: text/html; charset=utf-8</span><br></pre></td></tr></table></figure><p>Access-Control-Allow-Origin字段是每次回应都必定包含的。</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>CORS与JSONP的使用目的相同，但是比JSONP更强大。JSONP只支持GET请求，CORS支持所有类型的HTTP请求。JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。</p><h2 id="WebSocket协议跨域"><a href="#WebSocket协议跨域" class="headerlink" title="WebSocket协议跨域"></a>WebSocket协议跨域</h2><ul><li>WebSocket protocol是HTML5一种新的协议。它实现了浏览器与服务器全双工通信，同时允许跨域通讯，是server push技术的一种很好的实现。</li><li>原生WebSocket API使用起来不太方便，我们使用Socket.io，它很好地封装了webSocket接口，提供了更简单、灵活的接口，也对不支持webSocket的浏览器提供了向下兼容。</li></ul><h3 id="前端代码"><a href="#前端代码" class="headerlink" title="前端代码:"></a>前端代码:</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>user input：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./socket.io.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> socket = io(<span class="string">'http://www.domain2.com:8080'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 连接成功处理</span></span></span><br><span class="line"><span class="javascript">socket.on(<span class="string">'connect'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 监听服务端消息</span></span></span><br><span class="line"><span class="javascript">    socket.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">msg</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'data from server: ---&gt; '</span> + msg); </span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 监听服务端关闭</span></span></span><br><span class="line"><span class="javascript">    socket.on(<span class="string">'disconnect'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">'Server socket has closed.'</span>); </span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementsByTagName(<span class="string">'input'</span>)[<span class="number">0</span>].onblur = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    socket.send(<span class="keyword">this</span>.value);</span></span><br><span class="line"><span class="undefined">&#125;;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="node-server"><a href="#node-server" class="headerlink" title="node server"></a>node server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">var http = require(&apos;http&apos;);</span><br><span class="line">var socket = require(&apos;socket.io&apos;);</span><br><span class="line"></span><br><span class="line">// 启http服务</span><br><span class="line">var server = http.createServer(function(req, res) &#123;</span><br><span class="line">    res.writeHead(200, &#123;</span><br><span class="line">        &apos;Content-type&apos;: &apos;text/html&apos;</span><br><span class="line">    &#125;);</span><br><span class="line">    res.end();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.listen(&apos;8080&apos;);</span><br><span class="line">console.log(&apos;Server is running at port 8080...&apos;);</span><br><span class="line"></span><br><span class="line">// 监听socket连接</span><br><span class="line">socket.listen(server).on(&apos;connection&apos;, function(client) &#123;</span><br><span class="line">    // 接收信息</span><br><span class="line">    client.on(&apos;message&apos;, function(msg) &#123;</span><br><span class="line">        client.send(&apos;hello：&apos; + msg);</span><br><span class="line">        console.log(&apos;data from client: ---&gt; &apos; + msg);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    // 断开处理</span><br><span class="line">    client.on(&apos;disconnect&apos;, function() &#123;</span><br><span class="line">        console.log(&apos;Client socket has closed.&apos;); </span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="node代理跨域"><a href="#node代理跨域" class="headerlink" title="node代理跨域"></a>node代理跨域</h2><ul><li>node中间件实现跨域代理，是通过启一个代理服务器，实现数据的转发，也可以通过设置  * cookieDomainRewrite参数修改响应头中cookie中域名，实现当前域的cookie写入，方便接口登录认证。  </li><li>利用node + express + http-proxy-middleware搭建一个proxy服务器  </li></ul><h3 id="前端代码-1"><a href="#前端代码-1" class="headerlink" title="前端代码"></a>前端代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前端开关：浏览器是否读写cookie</span></span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问http-proxy-middleware代理服务器</span></span><br><span class="line">xhr.open(<span class="string">'get'</span>, <span class="string">'http://www.domain1.com:3000/login?user=admin'</span>, <span class="literal">true</span>);</span><br><span class="line">xhr.send();</span><br></pre></td></tr></table></figure><h3 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var express = require(&apos;express&apos;);</span><br><span class="line">var proxy = require(&apos;http-proxy-middleware&apos;);</span><br><span class="line">var app = express();</span><br><span class="line"></span><br><span class="line">app.use(&apos;/&apos;, proxy(&#123;</span><br><span class="line">    // 代理跨域目标接口</span><br><span class="line">    target: &apos;http://www.domain2.com:8080&apos;,</span><br><span class="line">    changeOrigin: true,</span><br><span class="line"></span><br><span class="line">    // 修改响应头信息，实现跨域并允许带cookie</span><br><span class="line">    onProxyRes: function(proxyRes, req, res) &#123;</span><br><span class="line">        res.header(&apos;Access-Control-Allow-Origin&apos;, &apos;http://www.domain1.com&apos;);</span><br><span class="line">        res.header(&apos;Access-Control-Allow-Credentials&apos;, &apos;true&apos;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    // 修改响应信息中的cookie域名</span><br><span class="line">    cookieDomainRewrite: &apos;www.domain1.com&apos;  // 可以为false，表示不修改</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.listen(3000);</span><br><span class="line">console.log(&apos;Proxy server is listen at port 3000...&apos;);</span><br></pre></td></tr></table></figure><h1 id="VUE-CLI解决跨域"><a href="#VUE-CLI解决跨域" class="headerlink" title="VUE-CLI解决跨域"></a>VUE-CLI解决跨域</h1><ul><li>首先创建项目</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack cors</span><br></pre></td></tr></table></figure><ul><li>在vue-cli项目文件夹中找到/config/index.js,找到proxyTable: {} 加入如下配置:</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> proxyTable: &#123;</span><br><span class="line">  <span class="string">'/v1'</span>: &#123;</span><br><span class="line">    target: <span class="string">'http://tingapi.ting.baidu.com'</span>, <span class="comment">//需要代理的网址</span></span><br><span class="line">    changeOrigin: <span class="literal">true</span>,</span><br><span class="line">    pathRewrite: &#123;</span><br><span class="line">      <span class="string">'^/v1'</span>: <span class="string">'/v1'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>在/src/main.js中引入axios</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">Vue.prototype.$http = axios;</span><br></pre></td></tr></table></figure><ul><li>在vue-cli项目中找到/src/App.vue 在方法中添加如下代码：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=<span class="string">"app"</span>&gt;</span><br><span class="line">    &lt;button v-on:click=<span class="string">"sbt"</span>&gt;访问跨域&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import axios from 'axios'</span></span><br><span class="line"><span class="regexp">import VueAxios from 'vue-axios'</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  name: 'App',</span></span><br><span class="line"><span class="regexp">  methods: &#123;</span></span><br><span class="line"><span class="regexp">    sbt: function() &#123;</span></span><br><span class="line"><span class="regexp">      this.$http.get("/</span>v1/restserver/ting?type=<span class="number">1</span>&amp;size=<span class="number">30</span>&amp;offset=<span class="number">0</span>&amp;method=baidu.ting.billboard.billList<span class="string">").then(m=&gt;console.log(m));</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ul><li><p>最终访问效果如下:<br><img src="/img/2020/2020-05-31-01.jpeg" alt></p></li><li><p>源代码放在: <a href="https://github.com/sunsetyan/vue-cli-cross-domain-demo" target="_blank" rel="noopener">https://github.com/sunsetyan/vue-cli-cross-domain-demo</a></p></li></ul><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://www.jianshu.com/p/abbfe1143ff1" target="_blank" rel="noopener">https://www.jianshu.com/p/abbfe1143ff1</a><br><a href="https://juejin.im/post/5a2f92c65188253e2470f16d" target="_blank" rel="noopener">https://juejin.im/post/5a2f92c65188253e2470f16d</a> </p><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前每次遇到跨域的问题，都是case by case解决掉了，从来没有系统的分析过这里面的原理，这次整理一下各种框架和情况下会遇到的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="浏览器跨域" scheme="http://blog.xiaoyuyu.net/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="跨域" scheme="http://blog.xiaoyuyu.net/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="CORS" scheme="http://blog.xiaoyuyu.net/tags/CORS/"/>
    
      <category term="vue-cli" scheme="http://blog.xiaoyuyu.net/tags/vue-cli/"/>
    
  </entry>
  
  <entry>
    <title>97-系统架构设计方法论-TOGAF</title>
    <link href="http://blog.xiaoyuyu.net/post/320fd534.html"/>
    <id>http://blog.xiaoyuyu.net/post/320fd534.html</id>
    <published>2020-05-19T13:39:41.000Z</published>
    <updated>2020-05-31T06:39:34.769Z</updated>
    
    <content type="html"><![CDATA[<p>一直想要整理架构设计相关的方法论。</p><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><blockquote><p>TOGAF，全称The Open Group Architecture Framework，是由组织The Open Group在1995年发布的企业架构框架，最新版本是9.2。The Open Group（开放群组）是国际著名标准化组织，拥有超过20年的标准制定与推广历史，而TOGAF框架可以说是它最著名的贡献了。TOGAF可以说是企业架构理论从政府进入到社会各研究机构的一个典型案例，它起源于美国国防部的信息管理技术架构框架（TAFIM，Technical Architecture Framework for Information Management），并在获得美国国防部的允许和鼓励之后，借助于美国政府大笔资金的投入，经过多年的努力最终于1995年发布了TOGAF的第一版。到目前为止，可以说TOGAF是最主流、最为人所广知的一个EA框架。由80%全球排名前50的公司都在使用它，中国企业对TOGAF的认可度也超过50%，以至于说起企业架构，很多人第一时间就以为是TOGAF。它还是唯一一个提供认证的框架。</p><footer><strong>[whfeng[</strong><cite>简书]] [https://www.jianshu.com/p/0a867fe89e90] [企业架构框架之TOGAF]</cite></footer></blockquote><p><br></p><h1 id="框架介绍"><a href="#框架介绍" class="headerlink" title="框架介绍"></a>框架介绍</h1><p><img src="/img/2020/2020-05-25-01.png" alt></p><p>图中具有彩色的部分就是TOGAF几大组成部分，下面分别说明一下。</p><ul><li><p>TOGAF架构开发方法（TOGAF ADM（Architecture Development Method））：这是TOGAF框架的核心部分，是TOGAF针对企业架构建设方法的论述，它以一个循环迭代模型为基础将企业架构的建设过程划分为前后衔接的若干步骤，并对每个步骤的输入、输出以及所采用方法都进行了详尽的阐述。</p></li><li><p>TOGAF内容框架（Architecture Content Framework）：这部分是TOGAF 9新加入的部分，是针对企业架构中所包含的各种工作产品以及他们之间的关系作出了详细的描述，从此改变了只重视架构开发过程和方法的风格，填补了以往没有架构内容描述和指导方面的空白。</p></li><li><p>TOGAF能力框架（TOGAF Capability Framework）：为了在一个企业中有效地操作企业架构并使其发挥最大的效能，一系列适当的组织结构、流程、技能、角色和责任需要被定义并结合起来，而TOGAF的能力框架正为如何组织好这些元素提供了指南。</p></li><li><p>TOGAF企业迭代框架和工具（TOGAF Enterprise Continuum and Tools）：企业连续体是企业架构资源库的一张视图，它为企业中的各种架构和解决方案制品提供了一种分类和组织的方法。</p></li><li><p>上述四部分相对独立，其中能力框架方面的内容着重于帮助企业更好地使用企业架构，架构开发方法和内容框架着重于帮助企业提高其企业架构建设和维护过程的标准化水平和执行效率，而企业连续体以及各种方法工具则更关注于为企业在企业架构的开发、使用和维护过程中提供参考和最佳实践。虽然这三个部分相对独立，但是一个优良的企业架构的创建、使用和维护是他们三者紧密配合、相互作用的结果。</p></li></ul><p>在这四部分中，个人认为架构开发方法ADM是TOGAF最核心的部分，把它搞懂了，TOGAF就八九不离十了。</p><h1 id="ADM介绍"><a href="#ADM介绍" class="headerlink" title="ADM介绍"></a>ADM介绍</h1><p>ADM方法被迭代式的应用在架构演进的整个过程中、阶段之间和每个阶段内部。</p><p>ADM便形成了3个级别的迭代概念：</p><ol><li>基于ADM整体的迭代，应用ADM方法，表明在一个架构开发循环结束后又进入新的循环。</li><li>多个架构过程的迭代，列入在完成了技术架构阶段的设计工作后又重新回到业务架构设计阶段。</li><li>在一个阶段内部的迭代，TOGAF支持基于一个阶段内部的多个开发活动，对复杂的架构内容进行迭代设计。</li></ol><h2 id="ADM方法中各个阶段的活动："><a href="#ADM方法中各个阶段的活动：" class="headerlink" title="ADM方法中各个阶段的活动："></a>ADM方法中各个阶段的活动：</h2><p><img src="/img/2020/2020-05-25-02.png" alt></p><center>The Architecture Development Method Cycle</center><ul><li><strong>准备阶段:</strong> 为实施成功的企业架构做好准备，包括定义组织机构特定的<strong>架构框架(?文档范围？大纲)</strong>，<strong>架构原则</strong>和<strong>架构工具</strong>。</li><li><strong>需求管理:</strong> 完成需求识别，需求管理和交付（持续的过程）？需求管理是贯穿整个架构设计的全生命周期的。具体和架构相关的活动可能包括需求分析及需求评审(可能时间上在设计开始之前)，需求确认(设计过程中)，需求验证(设计及开发活动结束之后)三种活动。按照优先级进行持续迭代。TOGAF项目的每个阶段，都是建立在业务需求至上并且需要对需求进行确认。</li><li><strong>架构愿景阶段(规划):</strong> 设置TOGAF项目的范围，约束和期望。<ul><li>创建架构愿景。</li><li>定义利益相关者（干系人）。</li><li>确认业务的上下文及环境，外部系统之间的调用关系及依赖。</li><li>创建架构设计说明书（大纲，条目？）</li><li>取得上层批准。</li></ul></li><li><strong>阶段B：业务架构 阶段C：信息系统架构（应用架构，数据架构），阶段D：技术架构。</strong><ul><li>从业务，信息系统和技术三个层面进行架构设计，在每一个层面分别完成以下三个活动：<ul><li>开发基线架构描述。</li><li>开发目标架构描述。</li><li>执行差距分析。</li></ul></li></ul></li><li><strong>阶段E：机会和解决方案：</strong> <ul><li>进行初步的实施规划，提出实施计划，并且确认在前面的各个阶段中确定的各种构建块的交付物形式；确定主要实施项目。</li><li>对项目分组并且纳入过渡架构。</li><li>决定各个模块的落地方案（制造，购买，重用，外包，商用，使用开源框架）。</li><li>评估优先级顺序。</li><li>识别依赖项。</li></ul></li><li><strong>阶段F: 迁移规划</strong> <ul><li>对阶段E确定的项目进行绩效分析和风险评估。</li><li>制定一个详细的实施和迁移计划。</li></ul></li><li><strong>阶段G: 实施治理</strong><ul><li>定义实施项目的架构限制。</li><li>提供实施项目的架构监督。</li><li>发布实施项目的架构合同。</li><li>检测实施项目以确保符合架构要求。</li></ul></li><li><strong>阶段H: 架构变更管理</strong><ul><li>提供持续检测和变更管理的流程，以确保架构可以响应企业的需求并且将架构对于业务的价值最大化。</li></ul></li></ul><h1 id="方法的详细说明"><a href="#方法的详细说明" class="headerlink" title="方法的详细说明"></a>方法的详细说明</h1><p>在ADM过程的应用过程中，根据ADM提供的相位目标，根据一些输入和步骤产生许多输出。比如：</p><ul><li>流程、</li><li>架构要求、</li><li>项目计划</li><li>。。。</li></ul><p>为了以一致和结构化的方式整理和展示这些主要的工作产品，TOGAF定义了一个结构模型，用于放置他们。 </p><ul><li>这些只是建议，不需要完全遵循。</li><li>生成的每个可交付成果应进行版本化以指示何时发生更改。</li><li>显示的版本编号也只是一个建议，大致表示处于哪个阶段。</li></ul><p>以下的文档从目标、步骤、输入和输出几个方面对ADM环中每个阶段进行了分析和描述。</p><h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><blockquote><p>整理一个文档，回答如下问题。</p></blockquote><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ul><li>对进行企业架构活动的组织的背景和环境进行审查;</li><li>确认利益相关者、他们的需求、优先级和需要承担的义务;</li><li>确定并审视企业机构中受到影响的部分，并且对其范围进行界定，定义约束条件和假设条件，这一点在使用联邦式体系结构环境的大型机构中特别重要;</li><li>定义组织的“架构足迹”，包括确定执行架构开发工作的人是谁、他们在哪里，以及他们的责任是什么;</li><li>定义用于进行企业架构建设的框架和详细方法，这里通常是对ADM进行适应性的改变（裁剪或者修改）;</li><li>确定一个治理和支持框架，用来在整个ADM过程中为架构治理提供业务流程和资源方面的支持，此种框架将会确保目标架构的适用性（fitness-for-purpose），并对其在进行过程中的效能进行评测；</li><li>选择和落实用于支持架构活动的各种工具和基础设施；</li><li>定义架构原则，而这些原则将会成为约束架构工作的一个部分。</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li>界定将要受到影响的企业组织的范围；</li><li>确定治理和支持框架；</li><li>建立企业架构团队；</li><li>定义架构原则；</li><li>选择架构框架并裁减定义；</li><li>落实相关架构工具；</li></ul><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><ul><li>TOGAF架构框架资料；</li><li>其他的架构框架资料；</li><li>业务原则、业务目标和驱动力；</li><li>架构治理策略;</li><li>IT战略；</li><li>当前企业架构组织模型；</li><li>当前企业架构框架；</li><li>当前企业架构原则；</li><li>当前企业架构资源库；</li></ul><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><ul><li>企业架构的组织模型；</li><li>定制的企业架构框架，包括架构原则；</li><li>企业架构资源库的雏形；</li><li>针对业务目标，原则和驱动力的声明或者引用；</li><li>治理框架；</li><li>架构工作要求说明书；</li></ul><h2 id="阶段A-架构的愿景"><a href="#阶段A-架构的愿景" class="headerlink" title="阶段A-架构的愿景"></a>阶段A-架构的愿景</h2><p>在架构愿景阶段，将启动一次架构开发过程的迭代，设置迭代工作范围，约束和期望，创建架构愿景、验证业务上下文，创景架构工作说明书并且取得大家的一致认可。<br>愿景表达了我们对架构的期望结果，阐明重要涉众关注的问题和目标，可帮助团队关注架构的核心领域。</p><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><ul><li>获取管理层对这次特定的ADM循环的相关承诺;</li><li>制定一个架构开发周期;</li><li>确认业务原则、业务目标、驱动力和KPI(Key Performance Indicators);</li><li>定义基线架构的范围，明确其所包含的组件以及组件的优先级;</li><li>确认相关的干系人，他们的关注点和目标;</li><li>定义架构工作所要解决的关键业务需求，以及必须应对的各项约束;</li><li>阐明架构愿景，并且定制价值主张，这些价值主张被用来阐述对于那些需求和约束的回应；</li><li>创建一个符合企业项目管理框架要求的综合计划；</li><li>去的继续下一个步骤工作的正式批准；</li><li>理解与其他并行的企业架构开发循环之间的相互影响；</li></ul><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h3><ul><li>成立架构项目（这里应该融合进企业整体的项目管理范畴）；</li><li>识别干系人、关注点和业务需求；</li><li>确定并且拆书业务目标、驱动力和约束；</li><li>评估业务能力；</li><li>评估业务转型的准备情况；</li></ul><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><ul><li>架构工作要求说明书；</li><li>业务原则、业务目标和驱动力；</li><li>企业架构的组织模型，包括受影响的组织范围、成熟度评测、差距及解决办法、架构团队所担当的角色和职责；</li><li>定制的架构框架，包括定制的架构方法、架构内容、架构原则和配置部署工具；</li><li>初具内容的架构资源库（包括初始的框架说明、架构描述和基线描述内容）</li></ul><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><ul><li>得到批准的架构工作说明书；<br><br>   </li><li>范围和约束；</li><li>架构工作计划；</li><li>角色和职责；</li><li>风险和应对措施；</li><li>工作产品效能评测；</li><li>业务案例与KPI指标；<br><br>   </li><li>改善的业务原则、业务目标和驱动力说明；</li><li>架构原则；</li><li>能力评估；</li><li>定制的架构框架（方法、内容、工具）；</li><li>架构愿景；<br><br>   </li><li>改善的关键高层次干系人的需求；</li><li>基线业务架构0.1版</li><li>基线数据架构0.1版（信息架构）</li><li>基线应用架构0.1版</li><li>基线技术架构0.1版</li><li>目标业务架构0.1版</li><li>目标应用架构0.1版</li><li>目标数据架构0.1版</li><li>目标技术架构0.1版<br><br>   </li><li>沟通计划</li><li>纳入到架构资源库中的新增内容</li></ul><h2 id="阶段B-业务架构"><a href="#阶段B-业务架构" class="headerlink" title="阶段B-业务架构"></a>阶段B-业务架构</h2><p>在业务架构阶段，将开发一个支持架构愿景的业务架构。架构愿景中概括的基线和目标业务架构将在此被细化，从而使它们可以作为技术分析的有用输入。业务过程建模、业务目标建模和用例建模是用于生成业务架构的一些技术，这又包含了所期望状态的差距分析。<br>本阶段的核心内容包括组织如何满足业务目标；企业静态特征（业务目标、业务组织结构、业务角色）；企业动态特征（流程、功能、服务）。</p><h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><ul><li>描述基线业务架构；</li><li>设计出目标业务架构；</li><li>执行以上二者的差距分析；</li><li>选择和开发相关的架构视角，通过这些视角架构师可以阐述业务架构是如何对各个干系人的关注点进行解答的；</li><li>确定与架构视角相关的工具和技术；</li></ul><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤"></a>步骤</h3><ul><li>选择参考模型、视角和工具；</li><li>开发基线业务架构描述；</li><li>开发目标业务架构描述；</li><li>执行差距分析；</li><li>定义架构路线图组件；</li><li>分析对整个架构的影响；</li><li>涉众评审；</li><li>最终确定业务架构；</li><li>创建架构定义文档；</li></ul><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><ul><li>架构工作要求书；</li><li>业务原则、业务目标和驱动力；</li><li>能力评估；</li><li>沟通计划<br><br></li><li>企业架构的组织模型;</li><li>得到批准的架构工作说明书；</li><li>业务架构原则、包括在此之前已经存在了的业务原则；</li><li>定制的架构框架；</li><li>企业连续体；</li><li>架构资源库：<ul><li>可重用的组件和模块；</li><li>公开且可得的参考模型；</li><li>组织特定的参考模型；</li><li>组织标准；</li></ul></li><li>架构愿景，包括：<ul><li>经过改善的关键高层次干系人的需求</li><li>基线业务架构0.1版</li><li>基线数据架构0.1版</li><li>基线应用架构0.1版</li><li>基线技术架构0.1版</li><li>目标业务架构0.1版</li><li>目标应用架构0.1版</li><li>目标数据架构0.1版</li><li>目标技术架构0.1版    </li></ul></li></ul><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><ul><li>架构工作说明书（更新）</li><li>经过验证的业务原则、业务目标和驱动力；</li><li>详细的业务架构原则；</li><li>架构定义文档草稿；</li><li>基线业务架构1.0版本；如果有</li><li>目标业务架构1.0版本</li><li>组织结构；</li><li>业务目标；</li><li>业务功能；</li><li>业务服务；</li><li>业务流程，包括测评和交付物；</li><li>业务角色，包括相关技能需求的发展与改进；</li><li>业务数据模型；</li><li>组织和功能之间的相互关联；</li><li>主要涉众关注的业务架构视图；</li><li>架构需求说明书草稿；</li><li>差距分析的结果；</li><li>技术需求；</li><li>更新的业务需求；</li><li>架构路线图和业务架构组件；</li></ul><h2 id="阶段C-信息系统架构"><a href="#阶段C-信息系统架构" class="headerlink" title="阶段C-信息系统架构"></a>阶段C-信息系统架构</h2><p>在信息系统架构设计阶段，确定主要的信息类型和处理这些信息的应用系统。在本阶段有两个主要的步骤，数据架构设计（信息架构）和应用架构设计，二者既可以依次开发，也可以并行开发。核心内容为：IT系统如何满足企业的业务目标；信息以及信息之间的关系；应用以及应用之间的关系。</p><h3 id="数据架构-归纳且符合企业整体的信息架构-目标"><a href="#数据架构-归纳且符合企业整体的信息架构-目标" class="headerlink" title="数据架构(归纳且符合企业整体的信息架构)-目标"></a>数据架构(归纳且符合企业整体的信息架构)-目标</h3><ul><li>定义业务运行所需的数据源和数据类型。</li></ul><h3 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤"></a>步骤</h3><ul><li>选择参考模型、视角和工具；</li><li>开发基线数据架构1.0版本；</li><li>开发目标数据架构1.0版本；</li><li>执行差距分析；</li><li>定义组件；</li><li>分析对整个架构的影响；</li><li>涉众评审；</li><li>确定最终的数据架构；</li><li>完善架构定义文档；</li></ul><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h3><ul><li>架构工作要求说明书；</li><li>能力评估；</li><li>沟通计划；<br><br></li><li>企业架构的组织模型；</li><li>定制的架构框架；</li><li>数据原则（如果有，在整体的信息架构基础上）；</li><li>架构工作说明书；</li><li>架构资源库；<br><br></li><li>可重用的构建快；</li><li>公开可得的参考模型；</li><li>组织特定的参考模型；</li><li>组织标准；<br><br></li><li>按机构定义文档草稿-包括:<ul><li>基线业务架构1.0版；</li><li>目标业务架构1.0版；</li><li>基线数据架构0.1版；</li><li>目标数据架构0.1版；</li><li>基线应用架构（0.1或1.0版）；</li><li>目标应用架构（0.1或1.0版）；</li><li>基线技术架构（0.1版）；</li><li>目标技术架构（0.1版）；</li></ul></li><li>架构需求说明书:<ul><li>差距分析结果；</li><li>适用于此阶段的相关技术需求；</li><li>在架构路线图中的业务架构组件；</li></ul></li></ul><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><ul><li>经过改善或者更新的架构与安静阶段中的各交付物；</li><li>架构工作说明（update）</li><li>经过验证的数据原则或者新增的数据原则；</li><li>更新的架构定义文档草稿；</li><li>基线数据架构1.0版本；</li><li>目标数据架构1.0版本；<br><br></li><li>业务数据模型；</li><li>逻辑数据模型；</li><li>数据管理流程模型；</li><li>数据实体/业务功能矩阵；<br><br></li><li>主要涉众关注的数据架构视图；</li><li>更新的架构需求说明书；</li><li>差距分析结果；</li><li>数据集成需求；</li><li>适用于当前阶段的相关技术需求；</li><li>对于下一步将要设计的技术架构约束；</li><li>更新的也无需求；</li><li>更新的应用需求；</li><li>架构路线图中的数据架构组件；</li></ul><h3 id="应用架构-目标"><a href="#应用架构-目标" class="headerlink" title="应用架构-目标"></a>应用架构-目标</h3><ul><li>定义处理数据并支撑业务运行所需的各种应用系统；</li></ul><h3 id="步骤-4"><a href="#步骤-4" class="headerlink" title="步骤"></a>步骤</h3><ul><li>选择参考模型、视角和工具；</li><li>开发基线应用架构1.0版本；</li><li>开发目标应用架构1.0版本；</li><li>执行差距分析；</li><li>定义组件；</li><li>分析对整个架构的影响；</li><li>涉众评审；</li><li>最终确定应用架构；</li><li>完善架构定义文档；</li></ul><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><ul><li>架构工作要求说明书；</li><li>能力评估；</li><li>沟通计划；<br><br></li><li>企业架构的组织模型；</li><li>定制的架构框架；</li><li>应用原则；</li><li>架构工作说明书；</li><li>架构资源库；<br><br></li><li>架构定义文档草稿-包括：<ul><li>基线业务架构1.0版；</li><li>目标业务架构1.0版；</li><li>基线数据架构（0.1或者1.0版本);</li><li>目标数据架构（0.1版或1.0版）；</li><li>基线应用架构0.1版；</li><li>目标应用架构0.1版；</li><li>基线技术架构0.1版；</li><li>目标技术架构0.1版；</li></ul></li><li>架构需求说明书草稿，包括：<ul><li>差距分析结果；</li><li>适用于此阶段的相关技术需求；</li><li>架构路线图的业务架构组件和数据架构组件；</li></ul></li></ul><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><ul><li>经过改善和更新的架构愿景阶段中的各交付物：</li><li>架构工作说明（Update）；</li><li>经过验证的应用原则或新增的应用原则；</li><li>更新的架构定义文档：</li><li>基线应用架构1.0版</li><li>目标应用架构1.0版</li><li>主要涉众关注的应用架构视图</li><li>更新的架构需求说明书：</li><li>差距分析结果</li><li>应用交互需求</li><li>适用于当前阶段的相关技术需求；</li><li>对于将要设计的技术架构的约束；</li><li>更新的业务需求；</li><li>更新的数据需求；</li><li>架构路线图的应用架构组件。</li></ul><h2 id="阶段D-技术架构"><a href="#阶段D-技术架构" class="headerlink" title="阶段D-技术架构"></a>阶段D-技术架构</h2><p>在技术架构阶段，完成对IT系统基础服务设施的设计，定义了架构解决方案的物理实现，包括硬件、软件和通信技术。</p><h3 id="目标-3"><a href="#目标-3" class="headerlink" title="目标"></a>目标</h3><ul><li>开发一个目标技术架构，并以此作为后续的实施和迁移计划的基础。</li><li>将应用架构中定义的各种应用组件映射为相应的技术组件，</li><li>这些技术组件代表了各种可以从市场或组织内部获得的软件和硬件组件。</li></ul><h3 id="步骤-5"><a href="#步骤-5" class="headerlink" title="步骤"></a>步骤</h3><ul><li>选择参考模型，视角和工具；</li><li>开发基线技术架构1.0版；</li><li>开发目标技术架构1.0版；</li><li>执行差距分析；</li><li>定义组件；</li><li>分析对整个架构的影响；</li><li>涉众评审；</li><li>技术架构定稿；</li><li>完善架构定义文档。</li></ul><h3 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h3><ul><li>架构工作要求说明书</li><li>能力评估；</li><li>沟通计划<br><br></li><li>企业架构的组织模型；</li><li>定制的架构框架；</li><li>技术原则；</li><li>架构工作说明书；</li><li>架构资源库（四个方面）；</li><li>架构定义文档草稿-包括：<ul><li>基线业务架构1.0版</li><li>目标业务架构1.0版</li><li>基线数据架构1.0版</li><li>目标数据架构1.0版</li><li>基线应用架构1.0版</li><li>目标应用架构1.0版</li><li>基线技术架构0.1版</li><li>目标技术架构0.1版</li></ul></li><li>架构需求说明书草稿-包括：<ul><li>差距分析结果；</li><li>来自于之前各个阶段的相关技术需求；</li><li>架构路线图的业务、数据和应用架构组件；</li></ul></li></ul><h3 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h3><ul><li>经过改善和更新的架构愿景阶段中的各个交付物；</li><li>架构工作说明（update）</li><li>经过验证的或者新增的技术原则；</li><li>更新的架构定义文档；</li><li>基线技术架构1.0版</li><li>目标技术架构1.0版</li><li>个技术组件以及他们与信息系统之间的关系；</li><li>各个技术平台以及他的结构组成；</li><li>环境和位置；</li><li>期望的处理符合以及技术组件间的负荷分布；</li><li>物理（网络）通信；</li><li>硬件及网络说明；</li><li>主要涉众关注的技术架构视图；</li><li>更新的架构需求说明书；</li><li>差距分析结果；</li><li>从业务架构和信息系统架构阶段输出的需求；</li><li>更新后的技术需求；</li><li>架构路线图的技术架构组件；</li></ul><h2 id="机会及解决方案"><a href="#机会及解决方案" class="headerlink" title="机会及解决方案"></a>机会及解决方案</h2><p>这是第一个直接关注实施的阶段，该阶段主要描述确定目标架构交付物（项目、程序或文件）的过程。</p><h3 id="目标-4"><a href="#目标-4" class="headerlink" title="目标"></a>目标</h3><ul><li>重新审查业务目标和业务能力，合并从阶段B到阶段D的差距分析，确定主要工作包并分组；</li><li>重新审查并确认企业承受变化的能力；</li><li>获得一系列过渡架构，它们可以通过对各种机会的开发利用，来为各构建块的实现提供持续的业务价值；</li><li>产生概要性的实施与迁移策略，并取得共识。 </li></ul><h3 id="步骤-6"><a href="#步骤-6" class="headerlink" title="步骤"></a>步骤</h3><ul><li>确定关键的公司变更属性；</li><li>确定项目实施的业务约束；</li><li>审查并合并从阶段B到阶段D的差距分析结果；</li><li>从功能的角度审查IT需求；</li><li>确定并加强交互需求；</li><li>改善并验证依赖关系；</li><li>确认业务转型的准备情况和风险；</li><li>制订高层次的实施和迁移策略；</li><li>识别主要的工作包并进行分组；</li><li>确定过渡架构；</li><li>创建项目投资组合和项目章程，同时对架构进行更新。</li></ul><h3 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h3><ul><li>产品信息；<br><br></li><li>架构工作要求书；</li><li>能力评估；</li><li>沟通计划；</li><li>规划方法；<br><br></li><li>企业架构的组织模型；</li><li>定制的架构框架；</li><li>架构工作说明书；</li><li>架构愿景；</li><li>架构资源库；</li><li>架构定义文档草稿（v1.0版的4个基线架构和4个目标架构）；</li><li>架构需求说明书草稿：</li><li>差距分析结果（业务、数据、应用和技术架构）</li><li>架构需求</li><li>IT服务管理一体化要求</li><li>现存业务程序或项目的变更请求。</li></ul><h3 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h3><ul><li>经过改善和更新的架构愿景、业务架构、信息系统架构和技术架构阶段中的各交付物：</li><li>架构工作说明（Update）；</li><li>架构愿景（Update）；</li><li>架构定义文档草稿：</li><li>识别出的增量内容</li><li>交互和共存需求</li><li>实现和移植策略</li><li>项目清单和项目章程</li><li>架构需求说明书草稿（Update）；</li><li>能力评估：</li><li>企业架构成熟度概况</li><li>转型准备工作报告</li><li>过渡架构1.0版：</li><li>确定的关于差距、解决方案和依赖性的评估</li><li>风险注册表1.0版本</li><li>影响分析（项目列表）</li><li>依赖性分析报告</li><li>实施因素的评估和推导矩阵(Deduction Matrix)</li><li>实施和迁移计划0.1版本（概述）</li></ul><h2 id="阶段F-迁移规划"><a href="#阶段F-迁移规划" class="headerlink" title="阶段F-迁移规划"></a>阶段F-迁移规划</h2><p>该阶段通过制订一个详细的实现和迁移计划完成从基线架构向目标架构的转变。</p><h3 id="目标-5"><a href="#目标-5" class="headerlink" title="目标"></a>目标</h3><ul><li>确保实施和迁移规划与企业中正在使用的各种管理框架相协调；</li><li>通过分配业务价值和执行业务成本分析，划分所有工作包、项目和构建块的优先级；</li><li>最终确定架构愿景和架构定义文档，使其与共同商定的实施方法一致；</li><li>与相关干系人一起确认在机会和解决方案阶段中定义的过渡架构；</li><li>创建、演进并监控详细的实施和迁移规划，提供实现过渡架构所需的各种资源。</li></ul><h3 id="步骤-7"><a href="#步骤-7" class="headerlink" title="步骤"></a>步骤</h3><ul><li>确定管理框架与实施和迁移规划之间的相互作用；</li><li>为每个项目指定业务价值；</li><li>估算资源需求、项目时间和交付工具；</li><li>通过绩效评估和风险验证，确定迁移项目的优先级；</li><li>确定过渡架构的增量内容并更新架构定义文档；</li><li>生成架构实现路线图（有时间标识）和迁移计划；</li><li>创建架构演进循环并记录收到的经验教训。</li></ul><h3 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h3><ul><li>架构工作要求书；</li><li>能力评估（企业架构成熟度概况和转型准备报告）；</li><li>沟通计划；<br><br></li><li>企业架构的组织模型；</li><li>治理模型和框架：</li><li>企业架构管理框架</li><li>能力管理框架</li><li>投资组合管理框架</li><li>项目管理框架</li><li>运营管理框架</li><li>定制的架构框架；</li><li>架构工作说明；</li><li>架构愿景；</li><li>架构资源库；</li><li>架构定义文档草稿：</li><li>迁移规划策略</li><li>影响分析（项目列表和章程）</li><li>架构需求说明书草稿：</li><li>差距分析结果（业务、数据、应用和技术架构）</li><li>架构需求</li><li>IT服务管理一体化要求</li><li>现存业务程序和项目的变更请求；</li><li>经过确认和验证的架构路线图；</li><li>过渡架构1.0版：</li><li>确定的关于差距、解决方案和依赖性的评估</li><li>风险注册表1.0版本</li><li>影响分析（项目列表）</li><li>依赖性分析报告</li><li>实施因素评估和推导矩阵</li><li>实现和迁移计划0.1版。</li></ul><h3 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h3><ul><li>实施和迁移计划1.0版；</li><li>定稿的架构定义文档；</li><li>定稿的架构需求说明书；</li><li>定稿的架构路线图；</li><li>定稿的过渡架构；</li><li>可重用的架构构建块；</li><li>架构工作要求书（各实施项目，如果有的话）；</li><li>架构契约（关于各实施项目）；</li><li>实施治理模型；</li><li>从经验教训中产生的变更请求。</li></ul><h2 id="阶段G——实施治理"><a href="#阶段G——实施治理" class="headerlink" title="阶段G——实施治理"></a>阶段G——实施治理</h2><p>该阶段定义了实施项目的架构约束，提供项目构建的架构监督，产生一个架构契约。</p><h3 id="目标-6"><a href="#目标-6" class="headerlink" title="目标"></a>目标</h3><ul><li>为每个实施项目给予建议；</li><li>对涵盖整个实施和部署过程的架构契约进行治理；</li><li>在解决方案正在实施和部署时，行使恰当的治理职责；</li><li>确保各实施项目符合于规定的架构；</li><li>确保按工作计划成功部署了解决方案的相关程序；</li><li>确保已经部署的解决方案与目标架构一致；</li><li>组织各种支持性行动，确保被部署的解决方案长期有效。</li></ul><h3 id="步骤-8"><a href="#步骤-8" class="headerlink" title="步骤"></a>步骤</h3><ul><li>通过开发管理工作，确认部署的范围和优先级；</li><li>明确用于部署的资源和技能；</li><li>指导部署解决方案的开发工作；</li><li>执行企业架构合规审查；</li><li>实施业务和IT运营；</li><li>执行实施后审查并结束实施工作。</li></ul><h3 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h3><ul><li>架构工作要求说明书；</li><li>能力评估；<br><br></li><li>企业架构的组织模型：</li><li>受影响的组织范围</li><li>成熟度评测、差距及解决方法</li><li>架构团队所担当的角色和职责</li><li>架构工作的约束</li><li>预算需求</li><li>治理和支持策略</li><li>定制的架构框架：</li><li>定制的架构方法</li><li>定制的架构内容（交付物和制品）</li><li>配置和部署工具</li><li>架构工作说明书；</li><li>架构愿景；</li><li>架构资源库：</li><li>可重用的构建块</li><li>公开且可得的参考模型</li><li>组织特定的参考模型</li><li>组织标准</li><li>架构定义文档；</li><li>架构需求说明书：</li><li>架构需求</li><li>差距分析结果（业务、数据、应用和技术）</li><li>架构路线图；</li><li>过渡架构；</li><li>实施治理模型；</li><li>架构契约；</li><li>架构工作要求书（经过机会与解决方案和迁移规划阶段明确的）；</li><li>实施和迁移计划。</li></ul><h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><ul><li>架构契约（签字）；</li><li>变更请求；</li><li>影响分析（实施）；</li><li>建议；</li><li>可部署的符合架构要求的解决方案：</li><li>实现的符合架构要求的系统</li><li>填充了相关资料的架构资源库</li><li>架构合规性建议与特许</li><li>对服务交付需求的建议</li><li>关于效能指标的建议</li><li>服务水平协议（SLAs）</li><li>在实施后经过更新的架构愿景</li><li>在实施后经过更新的架构定义文档</li><li>在实施后经过更新的过渡架构</li><li>已实施解决方案的业务和IT运营模型</li></ul><h2 id="阶段H——架构变更管理"><a href="#阶段H——架构变更管理" class="headerlink" title="阶段H——架构变更管理"></a>阶段H——架构变更管理</h2><p>该阶段确保能够以一种可控制的方式对架构的改变进行管理。</p><h3 id="目标-7"><a href="#目标-7" class="headerlink" title="目标"></a>目标</h3><ul><li>确保基线架构持续符合当前实际情况；</li><li>评估架构性能并提出改进建议；</li><li>评估在之前阶段中制定的框架和原则的变化；</li><li>为实施治理阶段建立的新的企业架构基线建立一个架构变更管理流程；</li><li>将架构和运营的业务价值最大化；</li><li>运用治理框架。</li></ul><h3 id="步骤-9"><a href="#步骤-9" class="headerlink" title="步骤"></a>步骤</h3><ul><li>建立价值实现过程；</li><li>部署监控工具；</li><li>管理风险；</li><li>提供架构变更管理分析；</li><li>开发变更需求以满足性能目标；</li><li>管理治理过程；</li><li>启动实施变更的流程。</li></ul><h3 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h3><ul><li>在阶段E和F中确认的架构工作要求书；<br><br></li><li>企业架构的组织模型；</li><li>架构工作说明书；</li><li>架构愿景；</li><li>架构资源库；</li><li>架构定义文档；</li><li>架构需求说明书；</li><li>架构路线图；</li><li>由技术变化产生的变更请求：</li><li>新技术报告</li><li>资产管理成本削减措施</li><li>技术退出报告</li><li>各标准举措</li><li>由业务变化产生的变更请求：</li><li>业务发展</li><li>业务异常</li><li>业务革新</li><li>业务技术革新</li><li>战略变化发展</li><li>由经验教训产生的变更请求；</li><li>过渡架构；</li><li>实施治理模型；</li><li>架构契约（签字）；</li><li>合规性的评估；</li><li>实施和迁移计划。</li></ul><h3 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h3><ul><li>架构的各种更新；</li><li>对架构框架和原则的变更；</li><li>新的架构工作要求书，用于发起另一次ADM循环；</li><li>架构工作说明书（Update）；</li><li>架构契约（Update）；</li><li>合规性的评估（Update）。</li></ul><h2 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h2><p>架构需求管理适用于ADM的所有阶段，这是一个动态的过程，完成对企业需求的识别、存储并把它们插入或取出相应的ADM阶段。需求管理是ADM流程的中心。处理需求变化的能力对于ADM过程是非常重要的，架构通过其天然处理不确定性和变化的能力在涉众诉求之间架起桥梁并交付一个可实践的解决方案。</p><h3 id="目标-8"><a href="#目标-8" class="headerlink" title="目标"></a>目标</h3><ul><li>定义一个可以贯穿ADM循环各个阶段的管理架构需求的过程；</li><li>识别和存储企业需求并与相应的ADM阶段进行交互。</li></ul><h3 id="步骤-10"><a href="#步骤-10" class="headerlink" title="步骤"></a>步骤</h3><ul><li>通过业务情景或其它模拟技术来识别并记录需求（ADM各阶段）；</li><li>建立需求基线：</li><li>确定产生于当前架构开发方法阶段的各优先级事项</li><li>确认干系人认可各个结果优先级事项</li><li>记录需求优先级并将其放入需求库<br><br></li><li>监控需求基线；</li><li>识别发生变更的需求（ADM各阶段）：</li><li>增、删、改处理并重新评定优先级</li><li>识别并解决冲突</li><li>生成需求影响说明</li><li>评估变更的需求对现在和之前的ADM阶段产生的影响（ADM各阶段）；</li><li>实施架构变更管理阶段的需求（ADM架构变更管理阶段）；</li><li>更新需求资源库；</li><li>实施当前阶段的需求变更（ADM各阶段）；</li><li>评估并修订先前阶段的差距分析（ADM各阶段）。</li></ul><h3 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h3><ul><li>各个ADM阶段中与需求相关的输出就是需求管理流程的输入；</li><li>最初高层次的需求是作为一部分的架构愿景所产生；</li><li>每个架构领域都有相应的详细需求，之后的ADM阶段交付物也包含了对新的需求类型的映射（如一致性需求）。</li></ul><h3 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h3><ul><li>更新的架构需求说明（如有必要）；</li><li>需求影响的评估，识别出需要回到的ADM阶段。最终版本必须包含需求的全部含义（如成本、时间范围和业务流程）。</li></ul><h2 id="建立架构活动的范围"><a href="#建立架构活动的范围" class="headerlink" title="建立架构活动的范围"></a>建立架构活动的范围</h2><p>ADM方法不能够确定架构活动的范围，这必须由企业自己确定。需要限定架构活动范围的原因与以下因素有关：  </p><ul><li>创建架构的团队所具备的组织权力；</li><li>需要在架构中实现的目标和干系人的诉求；</li><li>可利用的人、资金以及其它资源。  </li></ul><p>选定的架构活动范围理论上应该地支持企业中的架构师高效地完成治理和整合工作。这需要一套一致的“架构分区”，确保架构师不会从事重复劳动或冲突的活动。这同样需要定义重用和多个架构分区间的服从关系。下面从四个维度对架构活动范围的限定进行了说明。</p><h3 id="企业范围或焦点"><a href="#企业范围或焦点" class="headerlink" title="企业范围或焦点"></a>企业范围或焦点</h3><ul><li>企业最大的业务范围是什么？其中又有多少是需要架构工作聚焦的？</li><li>许多企业的规模非常大，实际上形成了一个组织单位成员的联盟，每个成员都有自己独立的企业权利。(如事业部或者子公司)</li><li>现代企业越来越突破它的传统界线，包括了一个由供应商、客户和合作伙伴形成的模糊的传统行业企业联盟。</li></ul><h3 id="架构领域"><a href="#架构领域" class="headerlink" title="架构领域"></a>架构领域</h3><p>一个全面的企业架构描述应该包括全部四个架构领域（业务、数据、应用、技术），但是实际的资源和时间约束经常意味着没有充分的时间、资金或其它资源去设计一个自顶而下的、包含全部四个架构领域的架构描述。即使在选定的架构活动范围小于企业整体业务范围时也是这样。</p><h3 id="详述垂直范围或级别"><a href="#详述垂直范围或级别" class="headerlink" title="详述垂直范围或级别"></a>详述垂直范围或级别</h3><ul><li>架构工作应该细化到第几层？怎么样的架构工作才算充分的？</li><li>架构工作和其它相关工作（系统设计、系统工程以及系统开发）的界线是什么？一般是配合的，松散的分工</li></ul><h3 id="时间周期"><a href="#时间周期" class="headerlink" title="时间周期"></a>时间周期</h3><p>架构愿景的准确时间周期是什么？它是否意味着要在这个时间期间内用详细的架构描述填充满？如果不是，那么需要定义多少个中间级别的目标架构，并且它们的时间周期是多少？</p><h1 id="TOGAF方法论系列文章"><a href="#TOGAF方法论系列文章" class="headerlink" title="TOGAF方法论系列文章"></a>TOGAF方法论系列文章</h1><ul><li>系统架构设计方法论-TOGAF-概述: 背景介绍，ADM，以及TOGAF各个阶段的输入输出说明</li><li>TOGAF架构能力框架说明</li><li>各种架构方法论的对比</li></ul><h1 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h1><p><a href="https://segmentfault.com/a/1190000019704801" target="_blank" rel="noopener">https://segmentfault.com/a/1190000019704801</a><br><a href="https://baike.baidu.com/item/TOGAF/9832356?fr=aladdin" target="_blank" rel="noopener">https://baike.baidu.com/item/TOGAF/9832356?fr=aladdin</a><br><a href="https://www.cnblogs.com/xiang--liu/p/9710229.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiang--liu/p/9710229.html</a><br><a href="https://blog.csdn.net/watermelonbig/article/details/77620847" target="_blank" rel="noopener">https://blog.csdn.net/watermelonbig/article/details/77620847</a><br><a href="https://www.jianshu.com/p/0a867fe89e90" target="_blank" rel="noopener">https://www.jianshu.com/p/0a867fe89e90</a><br><a href="https://zhuanlan.zhihu.com/p/83618027" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/83618027</a><br><a href="https://zhuanlan.zhihu.com/p/84110694" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/84110694</a></p><p><a href="https://www.visual-paradigm.com/cn/features/togaf-adm-tools/" target="_blank" rel="noopener">https://www.visual-paradigm.com/cn/features/togaf-adm-tools/</a></p><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直想要整理架构设计相关的方法论。&lt;/p&gt;
    
    </summary>
    
      <category term="方法论" scheme="http://blog.xiaoyuyu.net/categories/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
    
      <category term="学习笔记" scheme="http://blog.xiaoyuyu.net/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="系统架构" scheme="http://blog.xiaoyuyu.net/tags/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>96-盛氏家训</title>
    <link href="http://blog.xiaoyuyu.net/post/5a21bfce.html"/>
    <id>http://blog.xiaoyuyu.net/post/5a21bfce.html</id>
    <published>2020-01-02T14:29:03.000Z</published>
    <updated>2020-01-02T15:00:28.471Z</updated>
    
    <content type="html"><![CDATA[<p>大丈夫在世，当 <strong>修身 养性 齐家 治国 平天下</strong></p><a id="more"></a><h1 id="修身"><a href="#修身" class="headerlink" title="修身"></a>修身</h1><h2 id="尚学"><a href="#尚学" class="headerlink" title="尚学"></a>尚学</h2><ul><li>不可愚蠢且懒惰。</li><li>世界上的事情，只要肯吃苦，一定可以做成。</li><li>多读历史，以史为鉴。</li><li>不要被经验束缚。</li><li>努力，还要有方法。</li></ul><h2 id="修身-1"><a href="#修身-1" class="headerlink" title="修身"></a>修身</h2><ul><li>顺天应人。</li><li>善于忍耐。大丈夫能屈能伸。</li><li>自我反省，时常总结。</li><li>偶尔回头看看，适当后退。</li><li>严谨果决。</li><li>严于律己。</li></ul><hr><h1 id="养性"><a href="#养性" class="headerlink" title="养性"></a>养性</h1><ul><li>不要轻视任何人。</li><li>弱小和无知从不是生存的障碍，傲慢才是。</li><li>说我好的人未必是好人，说我坏的人未必是坏人。</li><li>立场大于原则。</li><li>做人要厚道。</li><li>不可以玩物丧志。</li><li>不要轻浮，切忌性躁。</li><li>沉稳大气有格局。</li><li>不可穷追不舍，做事要留有余地。</li></ul><hr><h1 id="齐家"><a href="#齐家" class="headerlink" title="齐家"></a>齐家</h1><ul><li>花繁柳密处拨得开，方见手段；风狂雨骤时立得定，才是脚跟。</li><li>守正出奇。</li><li>良好的规则才能造就良好的家庭。</li><li>长幼有序，疏不间亲。父慈子孝，兄友弟恭。</li><li>一屋不扫何以扫天下，家里要安排的井井有条。</li><li>祖宗虽远，祭祀宜诚；子孙虽愚，诗书须读。</li><li>娶媳求淑女，勿计妆奁；嫁女择佳婿，勿慕富贵。</li><li>家富提携宗族，置义塾与公田；岁饥赈济亲朋，筹仁浆与义粟。</li><li>勤俭为本，自必丰亨；忠厚传家，乃能长久。</li><li>恤寡矜孤，敬老怀幼。</li></ul><hr><h1 id="治国"><a href="#治国" class="headerlink" title="治国"></a>治国</h1><ul><li>信交朋友，惠普乡邻。</li><li>不可色厉胆薄，好谋无断；干大事而惜身，见小利而忘命。</li><li>小人固当远，断不可显为仇敌；君子固当亲，亦不可曲为附和。</li><li>见贤思齐。</li><li>执法如山，守身如玉。</li><li>严以律己，宽以待人。</li><li>走心。</li><li>利在一身勿谋也，利在天下者必谋之；利在一时固谋也，利在万世者更谋之。</li><li>大智兴邦，不过集众思；大愚误国，只为好自用。</li><li>不可用战术的勤奋弥补战略的懒惰。</li><li>最忌愚蠢而勤奋的人。</li><li>聪明睿智，守之以愚；功被天下，守之以让；勇力振世，守之以怯；富有四海，守之以谦。</li><li>庙堂之上，以养正气为先；海宇之内，以养元气为本。</li></ul><hr><h1 id="平天下"><a href="#平天下" class="headerlink" title="平天下"></a>平天下</h1><ul><li>弱小和无知从不是生存的障碍，傲慢才是。</li></ul><p><hr></p><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大丈夫在世，当 &lt;strong&gt;修身 养性 齐家 治国 平天下&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.xiaoyuyu.net/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="术与道" scheme="http://blog.xiaoyuyu.net/tags/%E6%9C%AF%E4%B8%8E%E9%81%93/"/>
    
      <category term="家训" scheme="http://blog.xiaoyuyu.net/tags/%E5%AE%B6%E8%AE%AD/"/>
    
  </entry>
  
  <entry>
    <title>95-2019年度总结-做点什么让自己骄傲</title>
    <link href="http://blog.xiaoyuyu.net/post/598be3fa.html"/>
    <id>http://blog.xiaoyuyu.net/post/598be3fa.html</id>
    <published>2020-01-01T14:09:37.000Z</published>
    <updated>2020-01-02T07:18:55.855Z</updated>
    
    <content type="html"><![CDATA[<p>2019做了很多事情，但是仍然不能称为满意。</p><a id="more"></a><h1 id="目标review"><a href="#目标review" class="headerlink" title="目标review"></a>目标review</h1><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ul><li>混一下，能够做点自己的事情，工资能提升。</li><li>失去了一号位的位置。其实之前自己没有想清楚。</li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul><li>做好一切能做的。</li></ul><h2 id="个人"><a href="#个人" class="headerlink" title="个人"></a>个人</h2><ul><li>齐家治国?修身养性?加薪了，但是没升职。身价提升了。</li><li>时间利用更有效了，只是没有产生质变。有了自己的时间，思考。</li></ul><h2 id="家庭与团队"><a href="#家庭与团队" class="headerlink" title="家庭与团队"></a>家庭与团队</h2><ul><li>有好有坏吧。</li></ul><hr><h1 id="做了哪些事情"><a href="#做了哪些事情" class="headerlink" title="做了哪些事情"></a>做了哪些事情</h1><h2 id="工作-1"><a href="#工作-1" class="headerlink" title="工作"></a>工作</h2><ul><li>一份工作。一个还算大厂的背景。</li><li>把土带了一下。</li><li>写了一个机器人。相当于尝试了两个方向，打基础。</li><li>做了一个量化交易平台。</li><li>AI入门了。</li><li>别的没有了。</li><li>review了一下2017年的总结，其实更多的在退步。在这里拿出来，警示一下自己。<pre>  * 大局观  * 补位  * 持续集成卓有成效  * 安全管理方案  * Scrum团队管理  * 团队几次危机和风险应对  * 各种流程，恰到好处  * 自动化测试，白盒黑盒压力测试  * springboot的基础架构  * 推动力&执行力  * 客户端各种奇技淫巧&版本管理  * 前端的可行性方案&基础架构&技术栈梳理  * Devops技术栈梳理  * 团队里打鸡血和最苛刻的人  * 成功的团队招聘。面试了超过300人。几个技术骨干。ygy,lyf,xwq,wqq,lch,yzx和另外一些合适的人。  * 品质管理各种流程控制  * 几个亮点项目  * 一整套数据分析，实施方法论。  * 数据库玩的更熟了  * 分析&解决节奏</pre></li></ul><hr><h2 id="生活-1"><a href="#生活-1" class="headerlink" title="生活"></a>生活</h2><ul><li>铁蛋有了一些改进。</li><li>读了更多的书。今年读完大约了10本。</li><li>给家里建立了图书馆，需要靠后续引导了。</li><li>开始做喜马拉雅主播，锻炼语法能力。</li><li>PPT做的包装的更好了，但是没有干货提升。</li><li>铁蛋的培养体系，包括知识体系和书单。</li><li>优化了投资策略，存下了钱。</li><li>本来就是慢下来，让自己有机会走的慢一点。更加恰如其分。</li><li>但是之前的种种，其实没有进步。之前已经做了的。<ul><li>精力分配的思维导图。</li><li>家庭食谱。</li><li>财务预算决算。</li><li>家庭资金分配。</li><li>家庭生活的思维导图。包括投资等。</li><li>保险规划。</li><li>工作机会评估模型。</li></ul></li></ul><h2 id="个人-1"><a href="#个人-1" class="headerlink" title="个人"></a>个人</h2><ul><li>自己想要维护的产品列表:<ul><li>博客,后续拓展到微信公众号，头条，博客，和土一起维护。</li><li>音乐推荐网站。</li><li>对话机器人。加AI的整个基础体系。</li><li>量化交易平台。</li><li>比特币定投平台。(第一个可见的可以生产化的的产品)</li></ul></li><li>身体:<ul><li>健身了至少，全年跑了100公里。健身时间增加了。 </li></ul></li></ul><h2 id="家庭和团队"><a href="#家庭和团队" class="headerlink" title="家庭和团队"></a>家庭和团队</h2><ul><li>失去了一号位的定位。明年要重建。</li><li>带了学弟和他们公司，继续做顾问。</li><li>给南京的团队帮了忙，其实性价比极其低下。这些事情三年前都是看不上的。</li><li>父母的关系恶化，其实是极大的打击。</li><li>目前养下来的人，其实只是权宜之计。</li><li>花在家里的时间增加了。</li><li>组织了6次线下聚餐，但是没有转化为收益。</li><li>去旅游了一次。还回家了一次。</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>没想到了。</p><hr><h1 id="有哪些做得好的"><a href="#有哪些做得好的" class="headerlink" title="有哪些做得好的"></a>有哪些做得好的</h1><ul><li>真的是在退步的一年。可能好处就是身体和心理压力减少了。但是主要是多赚了钱，给了土一个还可以的位置。</li></ul><hr><h1 id="有哪些做的不好的"><a href="#有哪些做的不好的" class="headerlink" title="有哪些做的不好的?"></a>有哪些做的不好的?</h1><ul><li>再想想。</li></ul><hr><h1 id="2020的目标"><a href="#2020的目标" class="headerlink" title="2020的目标"></a>2020的目标</h1><ul><li>天津买房。</li><li>铁蛋的教育。</li><li>坚定地执行可控的投资策略。定投+理财。即便是数字货币和股票也坚决定投。保守主义。</li><li>模型思维，全部学一下。读10本书单上的书。</li><li>帮几个人的工作稳固一下，培养自己的人，尤其是土。</li><li>重归一号位，想办法攒一个事情，养活1个全职(下半年)+3个兼职的人，争取一年发出去6万工资,并且公司能取得对应的利润。搭建一套靠谱的框架便于接项目。</li><li>继续组织6次线下聚餐。更靠谱的给两家公司做顾问，不求多。</li><li>和土的博客写出10篇高质量的文章。</li><li>升职。</li><li>对话机器人+定投平台产品化。</li><li>学会游泳。</li><li>给自己+土和铁蛋制定调养+健身计划。自己全年跑完100公里(20次5公里,其中争取像今年一样奥森10次)，游泳10公里,跳绳2万次。爬山5次。其他热身10小时。</li><li>其他计划能完成。包括预算，保险，投资，食谱等。<p><!--<span id="busuanzi_container_page_pv"> 阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019做了很多事情，但是仍然不能称为满意。&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.xiaoyuyu.net/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="年度总结" scheme="http://blog.xiaoyuyu.net/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
      <category term="2019" scheme="http://blog.xiaoyuyu.net/tags/2019/"/>
    
  </entry>
  
  <entry>
    <title>93-数据库设计指南</title>
    <link href="http://blog.xiaoyuyu.net/post/17a93bf0.html"/>
    <id>http://blog.xiaoyuyu.net/post/17a93bf0.html</id>
    <published>2019-11-22T03:53:21.000Z</published>
    <updated>2020-01-01T14:13:05.525Z</updated>
    
    <content type="html"><![CDATA[<p>干货来了, 数据库设计最佳实践.</p><a id="more"></a><h1 id="基础部分"><a href="#基础部分" class="headerlink" title="基础部分"></a>基础部分</h1><ul><li>表存储引擎必须使用InnoDB。</li><li>表字符集默认使用utf8，必要时候使用utf8mb4。</li><li>数据库，表，字段字符集一定要统一，统一字符集可以避免由于字符集转换产生的乱码。</li><li>不允许使用存储过程，视图，触发器，Event。</li><li>禁止在数据库中存储大文件，例如照片，可以将大文件存储在对象存储系统，数据库中存储访问路径。</li><li>禁止在线上环境做数据库压力测试。各个环境的数据库应该隔离。</li><li>事物尽可能的小，不要在代码层面直接一个大的transaction。</li><li>我们不删除记录，我们总是用删除标记(软删除)来进行”删除”操作。</li><li>UUID ()，USER () 这样的 MySQL INSIDE 函数对于复制来说是很危险的，会导致主备数据不一致，所以请不要使用。如果一定要使用 UUID 作为主键，让应用程序来产生。</li><li>控制单表数据量，最佳实践是在500万条以下，应该在一开始就考虑： 可以用历史数据归档（应用于日志数据），分库分表（应用于业务数据）等手段来控制数据量大小。</li><li>字段约束和索引应该分开来设计。</li></ul><h1 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h1><ul><li>库名，表名，列名必须用小写，采用下划线分隔。因为默认情况下，mysql对大小写敏感，mysql数据库本质上是linux系统下的一个文件，而linux系统是大小写敏感的。</li><li>库名，表名，列名必须见名知义，长度不要超过32字符</li><li>建议: 字典表以 ${domain缩写<em>dict</em>}为前缀。如 cm_dict_,  关联表以${domain缩写<em>relation</em>}为前缀。</li><li>有数据库对象名称禁止使用mysql保留关键字。</li><li>所有存储相同数据的列名和列类型必须一致，比如user表中的id和order表中的user_id。</li></ul><h1 id="字段设计及约束"><a href="#字段设计及约束" class="headerlink" title="字段设计及约束"></a>字段设计及约束</h1><ul><li>禁止对数据库表字段进行删除和修改的操作。</li><li>不要使用联合主键，目前我们规范中推荐的是使用业务无关的自增主键。</li><li>在设计时尽量包含两个日期字段:create_time (创建日期),update_time (修改日期) 且 非空，对表的记录进行更新的时候，必须包含对 update_time 字段的更新。</li><li>建议将大字段，访问频度低的字段拆分到单独的表中存储，分离冷热数据。</li><li>设计表时尽量用“小数据类型”，比如尽量避免text，blob,如果必须使用，应该在单独的表中进行存储,实际上更应该存储到别的存储系统并且在mysql中保存链接即可。</li><li>禁止使用外键，如果要保证完整性，应由代码来实现。</li><li>根据业务区分使用tinyint/int/bigint，分别会占用1/4/8字节。</li><li>字段长度比较固定，或者长度近似的业务场景，适合使用char，能够减少碎片，查询性能高。</li><li>字段长度相差较大，或者更新较少的业务场景，适合使用varchar(n)，能够减少空间。其中n表示字符数而不是字节数。</li><li>建议: 必须把字段定义为NOT NULL并设默认值。</li><li>使用varchar(20)存储手机号，不要使用整数。或者char(20)。</li><li>使用INT UNSIGNED存储IPv4，不要用char(15)。</li><li>使用TINYINT来代替ENUM。</li><li>不要在表中建立预留字段，新增字段的代价并不是很大。</li><li>对于非负型的数据（如自增ID、整型IP）来说，要优先使用无符号整型来存储。</li><li>同财务相关的金额类数据必须使用decimal类型,可以保证不出现精度丢失。</li><li>手机号，身份证号等可以作为索引，可以建立唯一约束，但是不要作为主键。</li></ul><h1 id="索引规范"><a href="#索引规范" class="headerlink" title="索引规范"></a>索引规范</h1><ul><li>在select，delete，update的where从句中的列,包含在order by，group by，distinct字段中的列和多表join的关联列建立索引</li><li>唯一索引使用uniq_[字段名]来命名。</li><li>非唯一索引使用idx_[字段名]来命名。</li><li>单张表索引数量建议控制在5个以内。</li><li>索引会影响写的性能。</li><li>异常复杂的查询需求，可以选择ES等更为适合的方式存储。</li><li>区分度最高的放在联合索引的最左侧（区分度=列中不同值的数量/列的总行数）。</li><li>尽量把字段长度小的列放在联合索引的最左侧（因为字段长度越小，一页能存储的数据量越大，IO性能也就越好）。</li><li>使用最频繁的列放到联合索引的左侧（这样可以比较少的建立一些索引）。</li><li>组合索引字段数不建议超过5个。</li><li>不建议在频繁更新的字段上建立索引。</li><li>非必要不要进行JOIN查询，如果要进行JOIN查询，被JOIN的字段必须类型相同，并建立索引</li><li>理解组合索引最左前缀原则，避免重复建设索引，如果建立了(a,b,c)，相当于建立了(a), (a,b), (a,b,c)。</li><li>对于非主键唯一的int类型字段，没有将其单独设置为索引比必要。设置索引后反倒增大了内存的占用，检索时的性能也不见得会有提升。</li><li>对于频繁的查询优先考虑使用覆盖索引(只在必要且数据量较大频繁使用的场景)。覆盖索引：就是包含了所有查询字段(where,select,ordery by,group by包含的字段)的索引。</li></ul><h1 id="SQL语句规范"><a href="#SQL语句规范" class="headerlink" title="SQL语句规范"></a>SQL语句规范</h1><ul><li>禁止使用select *，只获取必要字段。</li><li>insert必须指定字段，禁止使用insert into T values()。指定字段插入，在表结构变更时，能保证对应用程序无影响。</li><li>不允许在where条件列使用函数。</li><li>建议: 不要负向查询以及%开头的模糊查询。</li><li>同一个字段上的OR必须改写为IN，IN的值必须少于50个。</li><li>应用程序必须捕获SQL异常，并且记录日志。</li><li>SQL事物不能设计太大，比如一次性提交10W条insert，一般来说insert事物的话，5K~1W来做批处理就可以了。</li><li>过大的SQL应该拆分成小的，减少锁的时间。同时也更容易运用CPU的性能。</li><li>update时，where语句尽量要走索引，不然会全表扫描，一般情况下1G的数据至少需要10S。</li><li>禁止使用order by rand 进行随机排序。</li></ul><h1 id="操作建议"><a href="#操作建议" class="headerlink" title="操作建议"></a>操作建议</h1><ul><li>进行非查询操作时，尽量使用begin来开启事务。否则可能因为少写了where条件或者其他误操作无法回滚。</li><li>应用程序中的数据库账号应该只赋予所需的最小权限。最佳实践是不分配DELETE的权限。</li><li>禁止从开发环境，测试环境直连生产环境数据库。</li><li>合理使用临时表，备份表，报表，而不是直接操作原有数据表。</li></ul><h1 id="设计checklist"><a href="#设计checklist" class="headerlink" title="设计checklist"></a>设计checklist</h1><ul><li>是否详细定义了数据库的组织结构和内容？</li><li>是否有合理的数据库规范。</li><li>是否按照组件进行了合理的划分。</li><li>是否指出了所用关键的业务规则，并描述其对系统的影响？</li><li>是否有不是必须的实体？</li><li>是否梳理清楚了实体与设计之间的关系。</li><li>基本表的性质: 在有必要的场景，是否设计了合适的结果表(存储统计数据)。</li><li>原子性。基本表中的字段是不可再分解的。</li><li>原始性。基本表中的记录是原始数据（基础数据）的记录。</li><li>演绎性。由基本表与代码表中的数据，可以派生出所有的输出数据。</li><li>稳定性。基本表的结构是相对稳定的，表中的记录是要长期保存的。</li><li>是否在设计范式和性能之间做了良好的权衡,并且在此基础上做了合理的字段冗余。</li><li>是否识别与正确处理多对多的关系。</li><li>E-R图是否满足: 结构清晰、关联简洁、实体个数 适中、属性分配合理、没有低级冗余。</li></ul><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;干货来了, 数据库设计最佳实践.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>91-自杀前的13秒</title>
    <link href="http://blog.xiaoyuyu.net/post/1b91a4c6.html"/>
    <id>http://blog.xiaoyuyu.net/post/1b91a4c6.html</id>
    <published>2019-05-01T14:52:26.000Z</published>
    <updated>2019-09-17T02:52:36.350Z</updated>
    
    <content type="html"><![CDATA[<p>其实这个世界虽然充满了黑暗,宇宙的本质也是黑暗与竞争,但是我们仍然需要鼓起巨大的勇气,因为这个世界本来就不完美,不完整。<strong>绝望是由无数细碎的失望聚集而成的。同样,爱也是。</strong> </p><a id="more"></a><p>推荐一篇文章，原文来自<a href="https://mp.weixin.qq.com/s/5hDW8cl6Un_-2ogtB6e2Lw" target="_blank" rel="noopener">便利峰的公众号-《自杀前的13秒。》</a></p><p>因为我们每个个体,组成这个世界的每一个部分,每一个原子都不完美。<strong>你要知道这个世界的局限性。</strong></p><p>但是这个世界,总有一些值得你鼓起勇气去珍惜的地方。</p><p>生命是一场体验,一次修行。所以,不要轻易放弃啊。</p><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实这个世界虽然充满了黑暗,宇宙的本质也是黑暗与竞争,但是我们仍然需要鼓起巨大的勇气,因为这个世界本来就不完美,不完整。&lt;strong&gt;绝望是由无数细碎的失望聚集而成的。同样,爱也是。&lt;/strong&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="他山之石" scheme="http://blog.xiaoyuyu.net/categories/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
    
      <category term="读后感" scheme="http://blog.xiaoyuyu.net/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>90-极简主义-我的衣橱只需要这些衣服</title>
    <link href="http://blog.xiaoyuyu.net/post/bf4e01b6.html"/>
    <id>http://blog.xiaoyuyu.net/post/bf4e01b6.html</id>
    <published>2019-04-14T15:31:13.000Z</published>
    <updated>2019-09-17T02:52:36.350Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前一直说要极简主义，目前已经在各个维度开始执行和总结。今天又到了搬家的前夕，正好趁着周末把衣服重新整理了一下。</p></blockquote><blockquote><p>有本书叫做《法国人只需要十件衣服》，虽然没有拜读过，但是我自己整理了一个列表。然后依据这个原则，只做替换，不买多余的。控制数量之后，也很容易提升品质，同时可以极大的减少打理衣物所需的时间。</p></blockquote><a id="more"></a><p>#列表：</p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><ul><li><strong>内裤</strong>: 5 四季共享，但是一般4个月轮换一批。</li><li><strong>袜子</strong>：10 只分厚薄两款即可，也是4个月轮换一批。</li><li><strong>棉裤</strong>： 1 只有过冬最冷的几天需要。很少会用到。</li><li><strong>凉拖</strong>：1 夏天及洗澡时使用。</li><li><strong>棉拖鞋</strong>：1 其他季节使用。</li></ul><h2 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h2><ul><li><strong>保暖内衣</strong>: 3套 半年轮换一次。除了夏天，都可以穿了。</li></ul><h2 id="衣物"><a href="#衣物" class="headerlink" title="衣物"></a>衣物</h2><ul><li><strong>POLO衫</strong>: 2 应付夏天，百搭各种场合。两件轮换。</li><li><strong>圆领衫</strong>: 1 夏天晚上睡觉偶尔穿，也可以运动穿。</li><li><strong>运动T恤</strong> 1 和圆领衫轮换。</li><li><strong>西裤</strong>: 2 日常上班轮换。</li><li><strong>厚牛仔裤</strong>：1 冬天非正式场合。</li><li><strong>薄休闲裤</strong>：1 各种非正式场合，家里及运动时穿。</li><li><strong>毛衣</strong>: 2 厚，薄各一件。</li><li><strong>短袖衬衣</strong>: 3 夏天正装</li><li><strong>长袖衬衣</strong>: 3 春秋正装。里面一般还可以搭配内衣。</li><li><strong>开领卫衣</strong>: 1 卫衣场合。</li><li><strong>正装</strong>: 西服外套1，其他衬衣和西裤复用日常工作装即可</li><li><strong>运动马裤</strong>：1 和短裤一起轮换夏天的场合即可。夏天休闲也可以穿。</li><li><strong>运动短裤</strong>: 1 和马裤一起轮换夏天的场合即可。夏天休闲也可以穿。</li><li><strong>运动长裤</strong>：复用休闲裤 </li><li><strong>厚长羽绒服</strong>：1 北京过冬室外时间也不长。</li><li><strong>短薄羽绒服</strong>：1 轮换用，初冬和初春都可以用。</li><li><strong>风衣</strong>: 1 需要的场合也不是很多。</li></ul><h2 id="鞋"><a href="#鞋" class="headerlink" title="鞋"></a>鞋</h2><ul><li><strong>运动鞋</strong>：1 不会每天锻炼，所以一双足够。</li><li><strong>皮鞋</strong>： 2 轮换，基本3个月换一双。已经是固定搭配。</li><li><strong>冬天御寒鞋</strong>： 1 一双足矣。</li></ul><h2 id="其他配饰"><a href="#其他配饰" class="headerlink" title="其他配饰"></a>其他配饰</h2><ul><li><strong>背包</strong>：1 从来出差的各种场合都希望自己控制在一个包以内。</li><li><strong>皮带</strong>：1 很少需要。</li></ul><h1 id="四季及各种场合搭配"><a href="#四季及各种场合搭配" class="headerlink" title="四季及各种场合搭配:"></a>四季及各种场合搭配:</h1><ul><li><strong>深冬</strong><ul><li><strong>室外</strong> 厚长羽绒服+衬衣+毛衣+保暖内衣,保暖内裤+棉裤+西裤。</li><li><strong>室内</strong> 室外基础上减去羽绒服即可。</li><li><strong>运动休闲</strong> 室内运动为主，和秋天运动一致。</li></ul></li><li><strong>初冬，深秋，初春</strong>：<ul><li><strong>室外</strong> 薄羽绒服+衬衣+保暖内衣, 保暖内裤+西裤。风衣轮换。</li><li><strong>室内</strong> 室外基础上减去羽绒服即可。</li><li><strong>运动休闲</strong> 保暖内衣+卫衣，保暖内裤+休闲裤（运动裤）。</li></ul></li><li><strong>春秋时节</strong>：<ul><li><strong>室外</strong> 衬衣+保暖内衣，保暖内裤+西裤。</li><li><strong>室内</strong> 基本一致。</li><li><strong>运动休闲</strong> 保暖内衣+薄衬衣，保暖内裤+休闲裤（运动裤）。</li></ul></li><li><strong>盛夏</strong>：<ul><li><strong>室外</strong> POLO衫（长短衬衣），西裤。</li><li><strong>室内</strong> 同室外。</li><li><strong>运动休闲</strong> 圆领衫（运动T恤），休闲裤（马裤，短裤）。</li></ul></li></ul><h1 id="如何处理旧衣物呢？"><a href="#如何处理旧衣物呢？" class="headerlink" title="如何处理旧衣物呢？"></a>如何处理旧衣物呢？</h1><ul><li>款式比较新，但是自己已经没法穿的，大件，咸鱼和转转上低价卖好了。  </li><li>质量好，没坏的，款式朴素的捐给小区旧衣物箱。  </li><li>款式不适合捐赠，较新的整理好用单独的袋子，放垃圾箱边上。有需要的会取走。也有论斤收旧衣服的。直接处理也可以。  </li><li>其他已经坏掉的，就直接扔了吧。</li></ul><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前一直说要极简主义，目前已经在各个维度开始执行和总结。今天又到了搬家的前夕，正好趁着周末把衣服重新整理了一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;有本书叫做《法国人只需要十件衣服》，虽然没有拜读过，但是我自己整理了一个列表。然后依据这个原则，只做替换，不买多余的。控制数量之后，也很容易提升品质，同时可以极大的减少打理衣物所需的时间。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="术与道" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%8E%E9%81%93/"/>
    
    
      <category term="极简主义" scheme="http://blog.xiaoyuyu.net/tags/%E6%9E%81%E7%AE%80%E4%B8%BB%E4%B9%89/"/>
    
      <category term="术" scheme="http://blog.xiaoyuyu.net/tags/%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>89-摘要-成功创业者背后的13个秘密</title>
    <link href="http://blog.xiaoyuyu.net/post/25e75bf3.html"/>
    <id>http://blog.xiaoyuyu.net/post/25e75bf3.html</id>
    <published>2019-03-09T13:41:55.000Z</published>
    <updated>2019-09-17T02:52:36.349Z</updated>
    
    <content type="html"><![CDATA[<p>本文是”《最牛孵化器YC的总裁：成功创业者背后的13个秘密》” 的摘要及批注。作者是Y Combinator总裁Sam Altman. 原文地址在: <a href="http://blog.samaltman.com/how-to-be-successful" target="_blank" rel="noopener">http://blog.samaltman.com/how-to-be-successful</a></p><a id="more"></a><ul><li>一开始创业者都是奔着钱去的,但是最后都需要创造好的产品。</li><li>思考1: 给自己创造复利。<ul><li>指数式曲线是创造财富的关键。</li><li>为了寻找和创造网络效应与极端可扩性，值得付出大量努力。</li><li>朝着一条能产生复利效应的职业生涯前进非常重要。</li><li>对于你定义的任何成功指标(金钱、地位、影响世界等)，把自己的经历集中到能在这些指标后面再加一个零的事情上。</li><li>为了找到我的下一份事业，需要花多少时间我都愿意。但我总会希望这个项目一旦成功，将会令我职业生涯的所有其他东西看起来都像它的注脚。</li><li>我认为在商业（无论是对公司还是个人职业生涯）中，最大的竞争优势是要有长远思维，眼界要宽，要能够看到这个世界上的不同系统是如何整合到一起的。要相信指数式的发展，要有耐心，惊喜将会在远方等着你。</li></ul></li><li>思考2: 要自信爆棚。<ul><li>最成功的人自信到几乎产生错觉的地步。</li><li>你越是充满抱负，这个世界就越想挫伤你的锐气。</li><li>自我信念必须有“自我意识”加以平衡。</li></ul></li><li>思考3: 学会独立思考。<ul><li>创业这门技能很难教，因为原创性思维是很难教的。学校的模式不是教这个的——实际上，学校奖励的往往是相反。所以你必须自己培养这种东西。</li><li>要按照“第一性原理”去思考，尝试产生有趣的新想法，然后找人去交换这些想法，这是修炼创业技能的很好手段。下一步，就是找到简单快捷的手段在现实世界里去验证这些想法。</li><li>“我会失败很多次，但我终归会做对一次”就是创业之道。你必须给自己留出很多走运的机会。</li></ul></li><li>思考4: 要善于“推销”。<ul><li>只要加以刻意的练习，任何人都可以做得更好。</li><li>我的另一建议是，但凡重要时刻都要亲自出面。  </li><li>光有自我信念是不够的——你还得能说服其他人相信你所相信的的东西。</li><li>从某种程度来说，所有伟大的职业生涯都会变成推销工作。你必须把自己的计划向客户、潜在员工、媒体、投资者等进行布道。而这需要有鼓舞人心的愿景、强悍的沟通技能、一定的魅力，并且证明你有执行能力。</li><li>而要想善于推销，最好的办法是真心相信你在推销的东西。</li></ul></li><li>思考5: 让冒险变得容易。<ul><li>大多数人高估了风险又低估了回报。</li><li>要寻找一些小一点的赌注，比如如果犯错会输掉1倍，但如果赢了能挣100倍的赌注，然后朝着那个方向下更大的赌注。</li><li>有些创始人在Google或者Facebook工作得太久了。当大家习惯了舒适、可预测的生活，并且拥有可以在所做的任何事情上取得成功的声誉之后，就很难放弃这一切了。也就是创业成本太高了。</li></ul></li><li>思考6: 聚焦。<ul><li>专注度是工作的力量倍增器。</li><li>我碰到过的每个人，都把更多时间放在思考应该专注于什么上面。做对的事情要比努力工作很长时间重要得多，大多数人把太多时间浪费在无关紧要的事情上。</li><li>一旦你弄清楚了该做什么，要毫不迟疑地迅速完成一小撮优先事项。我至今还没有见过一个行动缓慢但非常成功的人。</li></ul></li><li>思考7: 努力工作。<ul><li>光靠聪明或者勤奋，能让你掌握本领域的90%，这当然也就很大的成就。但要想掌握99%你就得二者兼具——因为你得跟其他同样非常有才华的人竞争，这些人有很出色的想法，也愿意付出很多。</li><li>极端的人得到极致的结果。</li><li>努力工作势必要在生活上做出巨大牺牲，决定不这么做也是完全可以理解的，但是这样做也有很多好处。大多数情况下，发展势头会产生复合效应，而成功也会带来更大的成功。</li><li>努力工作的复合效应就像利息，你越早如此，可以用来收获回报的时间就越多。当你身上的责任不那么多时，努力工作也更加容易些，当你年轻时经常就是这种情况。</li><li>每个人都有自己的策略，但是有一个总能奏效办法，那就是找到自己喜欢的工作，跟自己愿意花大量时间共事的人工作。</li></ul></li><li>思考8: 要大胆一点。<ul><li>令你感到兴奋的东西往往也会令其他人感到兴奋。   </li></ul></li><li>思考9: 要率性。<ul><li>人的潜能其实是非常巨大的，足以让事情发生。缺乏自信、过早放弃，以及对自己不够狠，这些因素阻止了大多数人发挥自身的潜能。</li><li>那些说“我会一直做下去，直到把它做成；无论遇到什么样的挑战，我都会想办法解决它，”并且言出必行的人，几乎总是会取得成功。他们的执着足以给自己一个机会，让运气站在自己这边。</li></ul></li><li>思考10: 让别人难以竞争。<ul><li>别人难以与之竞争的公司往往价值更高。</li><li>要想别人很难跟你竞争，就得建立起你的影响力。</li></ul></li><li>思考11: 建立关系网络。<ul><li>你所认识的真正有才之人的网络规模，往往决定了你成就的高度。</li><li>建立关系网络的最好办法之一，是真心照顾跟你共事的人，在他们当中树立起声誉。</li><li>记住要花时间跟积极的，对你的抱负表示支持的人呆在一起。</li><li>“因为我不擅长Y，所以没法做X”是我经常听见创业者的说法，频率之高令我感到惊讶。弥补缺点的最好办法，是招募一支互补性强的团队，而不是光招那些跟你擅长一样东西的人。</li></ul></li><li>思考12: 你靠拥有东西而变得富有。<ul><li>福布斯富豪榜上的人几乎没有一个人是凭借着高工资而上榜的。</li><li>你是靠拥有价值会迅速增加的东西而变得富有的。</li><li>这个东西可以是企业的一部分、房地产、自然资源、知识产权，或者其他类似的东西。但无论如何，你都需要拥有某个东西的产权，而不仅仅是出卖你的时间。时间只能线性扩充。</li><li>让价值迅速增长的最好办法，是成规模地做出大家想要的东西。</li></ul></li><li>思考13: 要自我驱动。<ul><li>我所认识的最成功的人，首先都是内驱型的。</li><li>大多数人首先是外驱型的：他们做现在所做的东西，是因为想要给其他人留下印象。<p><!--<span id="busuanzi_container_page_pv">阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文是”《最牛孵化器YC的总裁：成功创业者背后的13个秘密》” 的摘要及批注。作者是Y Combinator总裁Sam Altman. 原文地址在: &lt;a href=&quot;http://blog.samaltman.com/how-to-be-successful&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.samaltman.com/how-to-be-successful&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="他山之石" scheme="http://blog.xiaoyuyu.net/categories/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
    
      <category term="方法论" scheme="http://blog.xiaoyuyu.net/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
      <category term="摘要" scheme="http://blog.xiaoyuyu.net/tags/%E6%91%98%E8%A6%81/"/>
    
      <category term="读书笔记" scheme="http://blog.xiaoyuyu.net/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>88-鱼缸里的小鱼们</title>
    <link href="http://blog.xiaoyuyu.net/post/1211ffd9.html"/>
    <id>http://blog.xiaoyuyu.net/post/1211ffd9.html</id>
    <published>2019-03-09T13:13:50.000Z</published>
    <updated>2019-09-17T02:52:36.348Z</updated>
    
    <content type="html"><![CDATA[<p>养了第三年的鱼缸，现在已经有一缸老水，当作平日休闲使用了。😄</p><a id="more"></a><p>现在鱼缸里面的生物有:</p><ul><li>一只巴西龟。</li><li>16条斑马鱼。</li><li>一只辣椒蟹。</li><li>两条白色锦鲤。</li><li>2条红草花金鱼。</li><li>2条纯红金鱼。</li><li>1条黄色斗鱼。</li><li>2株水榕树。</li><li>2只苹果螺。</li><li>1只斑马螺。</li><li>1条清道夫。</li></ul><p><img src="/img/2019/2019-fish/2019-03-09-01.jpeg" alt></p><p><img src="/img/2019/2019-fish/2019-03-09-02.jpeg" alt></p><p><img src="/img/2019/2019-fish/2019-03-09-03.jpeg" alt></p><p><img src="/img/2019/2019-fish/2019-03-09-04.jpeg" alt></p><p><img src="/img/2019/2019-fish/2019-03-09-05.jpeg" alt></p><p><img src="/img/2019/2019-fish/2019-03-09-06.jpeg" alt></p><p><img src="/img/2019/2019-fish/2019-03-09-07.jpeg" alt></p><p><img src="/img/2019/2019-fish/2019-03-09-08.jpeg" alt></p><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;养了第三年的鱼缸，现在已经有一缸老水，当作平日休闲使用了。😄&lt;/p&gt;
    
    </summary>
    
      <category term="杂谈" scheme="http://blog.xiaoyuyu.net/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="修生养心" scheme="http://blog.xiaoyuyu.net/tags/%E4%BF%AE%E7%94%9F%E5%85%BB%E5%BF%83/"/>
    
      <category term="养鱼" scheme="http://blog.xiaoyuyu.net/tags/%E5%85%BB%E9%B1%BC/"/>
    
  </entry>
  
  <entry>
    <title>87-一个建议的接口文档模板</title>
    <link href="http://blog.xiaoyuyu.net/post/abe8667.html"/>
    <id>http://blog.xiaoyuyu.net/post/abe8667.html</id>
    <published>2019-01-14T14:16:34.000Z</published>
    <updated>2019-09-17T02:52:36.348Z</updated>
    
    <content type="html"><![CDATA[<p>XXX电子商务平台API文档</p><p>======</p><h1 id="基础说明"><a href="#基础说明" class="headerlink" title="基础说明"></a>基础说明</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p><em>[说明文档用途。]</em><br>编写本文的目的是为了将系统功能进行模块化、服务化，将用户的操作以服务的方式提供。系统与系统之间遵循服务规范，将系统与系统之间的交互转为定制化服务交互，以实现系统与系统之间的集成。</p><a id="more"></a><h2 id="基本约束"><a href="#基本约束" class="headerlink" title="基本约束"></a>基本约束</h2><h3 id="基本设计原则"><a href="#基本设计原则" class="headerlink" title="基本设计原则"></a>基本设计原则</h3><p>参考《86-RestAPI设计指南》</p><h3 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h3><ul><li>所有接口字符集采用UTF-8。</li></ul><h3 id="返回类型约束"><a href="#返回类型约束" class="headerlink" title="返回类型约束"></a>返回类型约束</h3><ul><li>所有接口返回必须是严格定义的JSON类型。</li></ul><h3 id="接口版本约束"><a href="#接口版本约束" class="headerlink" title="接口版本约束"></a>接口版本约束</h3><ul><li>不允许发布无版本号的接口。</li><li>接口版本首先解决的是一组接口的版本问题。</li></ul><h2 id="请求公共约束"><a href="#请求公共约束" class="headerlink" title="请求公共约束"></a>请求公共约束</h2><p>请求的基本模板:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -X[HTTP METHOD] -H "Content-Type: application/json" -H "[token-info]:"   </span><br><span class="line"> "https://api-dev.[groupname].xiaoyuyu.io/[client-group]/[service-group-name]/  </span><br><span class="line"> [version]/[endpoint]" -d '&#123;  </span><br><span class="line">"head": [meta-parameters],  </span><br><span class="line">"body": [content]   </span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure></p><h2 id="URL整体规划"><a href="#URL整体规划" class="headerlink" title="URL整体规划"></a>URL整体规划</h2><h3 id="域名规范"><a href="#域名规范" class="headerlink" title="域名规范"></a>域名规范</h3><ul><li><strong><a href="https://api-[env-name].[groupname].domain.io/[clientGroup]/[version]/[endpoint]" target="_blank" rel="noopener">https://api-[env-name].[groupname].domain.io/[clientGroup]/[version]/[endpoint]</a></strong></li></ul><h3 id="域名规划"><a href="#域名规划" class="headerlink" title="域名规划"></a>域名规划</h3><ul><li>开发环境: <a href="https://api-dev.payment.xiaoyuyu.io/" target="_blank" rel="noopener">https://api-dev.payment.xiaoyuyu.io/</a></li><li>测试环境: <a href="https://api-test.payment.xiaoyuyu.io/" target="_blank" rel="noopener">https://api-test.payment.xiaoyuyu.io/</a></li><li>预演环境: <a href="https://api-staging.payment.xiaoyuyu.io/" target="_blank" rel="noopener">https://api-staging.payment.xiaoyuyu.io/</a></li><li>线上测试环境: <a href="https://api-onlinetest.payment.xiaoyuyu.io/" target="_blank" rel="noopener">https://api-onlinetest.payment.xiaoyuyu.io/</a></li><li>生产环境: <a href="https://api.payment.xiaoyuyu.io/" target="_blank" rel="noopener">https://api.payment.xiaoyuyu.io/</a></li><li>其中,线上测试环境是上线过程中备用,比如线上一共3台生产环境服务器,把其中一台从生产环境切掉，更新程序并且将域名指向它，测试完之后再将生产环境流量切换过来。</li></ul><h2 id="接口认证"><a href="#接口认证" class="headerlink" title="接口认证"></a>接口认证</h2><h2 id="基本数据类型约定"><a href="#基本数据类型约定" class="headerlink" title="基本数据类型约定"></a>基本数据类型约定</h2><p>此约定是系统整体容错的一部分，但是无论接口使用者还是接口生产者，都不应该因为此容错而减少自己模块本来需要的容错工作。  </p><table><thead><tr><th>数据类型</th><th>类型说明</th><th>默认值</th><th>备注</th></tr></thead><tbody><tr><td><strong>JSONObject</strong></td><td>JSON对象</td><td>{}</td><td></td></tr><tr><td><strong>JSONArray</strong></td><td>JSON数组</td><td>[]</td><td>数组中不允许使用混合类型</td></tr><tr><td><strong>Integer</strong></td><td>整型</td><td>Integer.MIN_VALUE</td><td></td></tr><tr><td><strong>Float</strong></td><td>浮点型</td><td>Float.MIN_VALUE</td><td></td></tr><tr><td><strong>Char</strong></td><td>字符型</td><td>空格</td><td></td></tr><tr><td><strong>String</strong></td><td>字符串</td><td>空字符串</td><td>不允许直接返回NULL</td></tr><tr><td><strong>Boolean</strong></td><td>布尔型</td><td>Boolean.FLASE</td><td>默认返回false</td></tr><tr><td><strong>嵌套对象</strong></td><td>嵌套对象</td><td>{}</td><td>根对象返回空,子对象不处理</td></tr><tr><td><strong>嵌套数组</strong></td><td>嵌套数组</td><td>[]</td><td>根对象返回空,子对象不处理</td></tr></tbody></table><h2 id="公共输入参数规范"><a href="#公共输入参数规范" class="headerlink" title="公共输入参数规范"></a>公共输入参数规范</h2><p>TODO: 补充token,加密,国际化,等等</p><table><thead><tr><th>字段名</th><th>必须</th><th>数据类型</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>requestInfo</td><td>是</td><td>JSONObject</td><td>表达每个请求的信息</td><td></td></tr><tr><td>requestInfo.sessionId</td><td>是</td><td>String</td><td>UUID,每次进入APP到退出算一次会话</td><td></td></tr><tr><td>requestInfo.reqId</td><td>是</td><td>String</td><td>UUID,每次请求独立生成一个Id</td><td></td></tr><tr><td>apkInfo</td><td>是</td><td>JSONObject</td><td>表达每个apk的信息</td><td></td></tr><tr><td>apkInfo.apkType</td><td>是</td><td>String</td><td>表示APK本身的类型</td><td>Dev,Debug,beta</td></tr><tr><td>apkInfo.apkId</td><td>是</td><td>String</td><td>UUID,每次安装会单独生成一个apkId</td><td></td></tr><tr><td>apkInfo.apkVersion</td><td>是</td><td>String</td><td>App的内部版本号</td><td></td></tr><tr><td>apkInfo.appVersion</td><td>是</td><td>String</td><td>App的显示版本号</td><td></td></tr><tr><td>clientInfo</td><td>是</td><td>JSONObject</td><td>表达客户端的信息</td><td></td></tr><tr><td>clientInfo.ip</td><td>是</td><td>String</td><td>客户端ipV4的地址</td><td></td></tr><tr><td>clientInfo.romInfo</td><td>是</td><td>String</td><td>定制版操作系统的信息</td><td></td></tr><tr><td>clientInfo.deviceTag</td><td>否</td><td>String</td><td>设备的标记</td><td></td></tr><tr><td>clientInfo.osInfo</td><td>否</td><td>String</td><td>操作系统的信息</td><td></td></tr><tr><td>userInfo</td><td>是</td><td>JSONObject</td><td>表达用户的信息</td><td></td></tr><tr><td>userInfo.userId</td><td>是</td><td>String</td><td>用户的唯一标识符</td></tr></tbody></table><h2 id="公共返回对象约定"><a href="#公共返回对象约定" class="headerlink" title="公共返回对象约定"></a>公共返回对象约定</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"responseCode"</span>: [responseCode],</span><br><span class="line">  <span class="attr">"responseInfo"</span>: &#123;</span><br><span class="line">    <span class="attr">"userMessage"</span>: [userMessage],</span><br><span class="line">    <span class="attr">"internalMessage"</span>: [internalMessage],</span><br><span class="line">    <span class="attr">"guideline"</span>: [guideline link]</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"link"</span>: </span><br><span class="line">    &#123;</span><br><span class="line"> <span class="attr">"document"</span>:<span class="string">" https://[domain]/docs#zoos"</span>,</span><br><span class="line"> <span class="attr">"href"</span>:[uri-info],</span><br><span class="line"> <span class="attr">"title"</span>:[doc-title],</span><br><span class="line"> <span class="attr">"type"</span>:<span class="string">"application/[vnd.yourformat]+json"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"responseData"</span>:[responseData]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="公共错误编码及说明"><a href="#公共错误编码及说明" class="headerlink" title="公共错误编码及说明"></a>公共错误编码及说明</h2><table><thead><tr><th>code</th><th>描述</th><th>适用范围</th><th>备注</th></tr></thead><tbody><tr><td>20000</td><td>请求成功</td><td>全部</td><td>200表示成功,后两位00是补充编码</td></tr></tbody></table><h2 id="公共数据字典"><a href="#公共数据字典" class="headerlink" title="公共数据字典"></a>公共数据字典</h2><table><thead><tr><th>字段名</th><th>取值</th><th>适用范围</th><th>备注</th></tr></thead><tbody><tr><td>status</td><td>1,2,3</td><td>全部文档</td><td>无</td></tr></tbody></table><h1 id="订单服务"><a href="#订单服务" class="headerlink" title="订单服务"></a>订单服务</h1><h2 id="查询订单列表"><a href="#查询订单列表" class="headerlink" title="查询订单列表"></a>查询订单列表</h2><h3 id="接口规范"><a href="#接口规范" class="headerlink" title="接口规范"></a>接口规范</h3><table><br>  <tr><br>    <th>URL</th><br>    <th colspan="5">/{baseUri}/orders</th><br>  </tr><br>  <tr><br>    <th>HTTP Method</th><br>    <td colspan="5">GET</td><br>  </tr><br>  <tr><br>    <th>访问权限</th><br>    <td colspan="5">基本验证,Https,用户验证</td><br>  </tr><br>  <tr><br>    <th>说明</th><br>    <td colspan="5">查询某个用户的订单列表</td><br>  </tr><br>  <tr><br>    <th rowspan="7"> 请求参数 </th><br>  </tr><br>  <tr><br>    <th>参数名称</th><br>    <th>必须</th><br>    <th>数据类型</th><br>    <th>描述</th><br>    <th>示范</th><br>  </tr><br>  <tr><br>    <td>body.pageSize</td><br>    <td>YES</td><br>    <td>Integer</td><br>    <td>一页的查询条目数</td><br>    <td>默认是10，最大值50</td><br>  </tr><br>  <tr><br>    <td>body.pageNo</td><br>    <td>YES</td><br>    <td>Integer</td><br>    <td>查询的页数</td><br>    <td>默认是1</td><br>  </tr><br>  <tr><br>    <td>body.sortBy</td><br>    <td>NO</td><br>    <td>String</td><br>    <td>参见数据字典,排序规则</td><br>    <td>默认按照时间倒排</td><br>  </tr><br>  <tr><br>    <td>body.from</td><br>    <td>NO</td><br>    <td>String</td><br>    <td>转换为Date,查询范围的开始时间</td><br>    <td>示范:2019-01-01 22:00:00</td><br>  </tr><br>  <tr><br>    <td>body.to</td><br>    <td>NO</td><br>    <td>String</td><br>    <td>转换为Date,查询范围的结束时间</td><br>    <td>示范:2019-01-01 22:00:00</td><br>  </tr><br>  <tr><br>    <th rowspan="10"> 返回参数 </th><br>  </tr><br>  <tr><br>    <td>responseData.pageCount</td><br>    <td>YES</td><br>    <td>Integer</td><br>    <td>一共有多少页</td><br>    <td></td><br>  </tr><br>  <tr><br>    <td>responseData.pageNo</td><br>    <td>YES</td><br>    <td>Integer</td><br>    <td>当前的页数</td><br>    <td></td><br>  </tr><br>  <tr><br>    <td>responseData.data</td><br>    <td>NO</td><br>    <td>JSONObject</td><br>    <td>订单详细信息</td><br>    <td></td><br>  </tr><br></table><h3 id="输入参数示范"><a href="#输入参数示范" class="headerlink" title="输入参数示范"></a>输入参数示范</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET -H "Content-Type: application/json" -H "Access-Token:abcd1234" "https://api-dev.haitao.xiaoyuyu.io/mobile/data-platform/v1/orders/base-orders" -d '&#123;</span><br><span class="line">  "head": [meta-parameters],</span><br><span class="line">  "body": &#123;</span><br><span class="line">    "pageSize":10,</span><br><span class="line">    "pageNo":1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><h3 id="返回参数示范"><a href="#返回参数示范" class="headerlink" title="返回参数示范"></a>返回参数示范</h3><pre><code class="shell"></code></pre><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XXX电子商务平台API文档&lt;/p&gt;
&lt;p&gt;======&lt;/p&gt;
&lt;h1 id=&quot;基础说明&quot;&gt;&lt;a href=&quot;#基础说明&quot; class=&quot;headerlink&quot; title=&quot;基础说明&quot;&gt;&lt;/a&gt;基础说明&lt;/h1&gt;&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;&lt;em&gt;[说明文档用途。]&lt;/em&gt;&lt;br&gt;编写本文的目的是为了将系统功能进行模块化、服务化，将用户的操作以服务的方式提供。系统与系统之间遵循服务规范，将系统与系统之间的交互转为定制化服务交互，以实现系统与系统之间的集成。&lt;/p&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="模板" scheme="http://blog.xiaoyuyu.net/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="API" scheme="http://blog.xiaoyuyu.net/tags/API/"/>
    
  </entry>
  
  <entry>
    <title>86-RestAPI设计指南-1-引言</title>
    <link href="http://blog.xiaoyuyu.net/post/46676be6.html"/>
    <id>http://blog.xiaoyuyu.net/post/46676be6.html</id>
    <published>2019-01-13T02:35:21.000Z</published>
    <updated>2019-09-17T02:52:36.347Z</updated>
    
    <content type="html"><![CDATA[<p>类似于阿里巴巴的开发规范或者谷歌的开发规范，API设计是目前很多场景下的基本功，所以这里给出一个笔者的最佳实践(Best Practice).</p><a id="more"></a><h1 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h1><ol><li>引言</li><li>基本的设计原则</li><li>良好的工具和选型</li><li>API的基础</li><li>路径和参数设计</li><li>选择与权衡</li><li>其他最佳实践</li><li>更多的约定</li><li>一个文档规范的示范</li><li>参考文献</li></ol><h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote><p>REST,即Representataional State Transfer的缩写。关于RESTful架构,可以参考《架构之美》<br>中的定义。</p></blockquote><ul><li>客户端和服务器之间的交互在请求间是无状态的，每个请求都必须包含理解请求的全部信息。</li><li>在此基础上，服务更容易实现分布式，水平扩展，异步处理和可重入(幂等请求)</li></ul><h2 id="REST架构中的基本定义"><a href="#REST架构中的基本定义" class="headerlink" title="REST架构中的基本定义"></a>REST架构中的基本定义</h2><ul><li>资源(Resource): 网络上的所有内容都表述成一个资源，一个实体或者一个具体的信息。它可以是一段文本，一张图片，一首歌曲，或者一种服务。</li><li>统一资源定位符(URI, Universal Resource Identifier): 一个资源的识别符或者说是一个地址，通过URI可以定位到一个唯一的资源，网络上每个资源都有一个唯一的识别符。</li><li>状态转换(State Transfer): 所有资源都共享统一的接口，以便在客户端和服务器之间传输状态。客户端与服务器端互动的过程，通常涉及到服务器端数据和状态变化的过程，比如文件被修改，访问数量增加等。</li><li>使用基本的HTTP请求方法<ul><li>GET: 获取资源(幂等并且安全的)。</li><li>POST: 新建资源</li><li>PUT: 更新资源</li><li>DELETE: 删除动作</li></ul></li><li>Hypermedia: 应用程序状态的引擎，实现hypermeida是API的最佳实践之一，可以参考api.github.com，后文也会再讲到。</li></ul><h1 id="基本的设计原则"><a href="#基本的设计原则" class="headerlink" title="基本的设计原则"></a>基本的设计原则</h1><h2 id="协议-Protocol"><a href="#协议-Protocol" class="headerlink" title="协议(Protocol)"></a>协议(Protocol)</h2><p>API与客户端通信的协议，应该尽量使用HTTPs。除此之外，白名单机制，VPN可以提高更多安全性。遵循<strong>“所有人应该知道他所需要完成工作必备的最少的知识”</strong>的原则。而一个接口，只有在访问者必须使用它时，才告诉这个访问者。</p><h2 id="域名-Domain"><a href="#域名-Domain" class="headerlink" title="域名(Domain)"></a>域名(Domain)</h2><p>应该将API部署到专用域名之下。好处显而易见。  </p><ul><li>更容易做动静分离。</li><li>更容易做服务降级和限流。</li><li>更容易做到高吞吐量。</li><li>更容易做流量分发。</li><li>更容易进行之后的水平扩展和服务拆分。</li></ul><blockquote><p>Sample: <strong><em><a href="https://api.groupname.domain.io/" target="_blank" rel="noopener">https://api.groupname.domain.io/</a></em></strong></p></blockquote><p>更好的实践是，将服务分组，并且根据情况进行必要的层次和分组(group)。这里的group可以包含事业部，也可以包含不同的客户，更可以包含不同的层次。</p><p><strong>规范: <a href="https://api.[service-group].domain.io/" target="_blank" rel="noopener">https://api.[service-group].domain.io/</a></strong></p><h2 id="基本URL-Root-URL"><a href="#基本URL-Root-URL" class="headerlink" title="基本URL(Root URL)"></a>基本URL(Root URL)</h2><p>基本的URL，在此文中指的是除了服务拆分之外的URL，这里的最佳实践是，可以包含环境，版本，分类，层次等，但是一个基本的URL，已经能决定除了接口或者服务粒度以外的所有事情。或者说，他可以决定，由一个作战单元（个人或者小的敏捷团队）日常维护的工作内容了。</p><blockquote><p>Sample: <strong><a href="https://api-dev.groupname.domain.io/mobile/v1/comment/[...]" target="_blank" rel="noopener">https://api-dev.groupname.domain.io/mobile/v1/comment/[...]</a></strong>   </p></blockquote><ul><li>此处dev表示开发环境(这里的api默认表示生产,api-dev表示开发，职责仍然是唯一的)</li><li>groupname表示分组(可以包含更多层次信息或者更多分层,但是最佳实践是一般domain不超过两层,也可以默认约定.io域名后缀全部是为api部署服务)</li><li>mobile表示面向移动端</li><li>v1表示本类的接口版本</li><li>comment表示此本类服务为评论服务</li></ul><h2 id="环境划分原则-Env"><a href="#环境划分原则-Env" class="headerlink" title="环境划分原则(Env)"></a>环境划分原则(Env)</h2><p>整体服务架构的划分原则不在此文档讨论范围之内，而一个最佳实践是,在domain当中就对环境做区分。</p><p><strong>规范: <a href="https://api-[envname].groupname.domain.io/" target="_blank" rel="noopener">https://api-[envname].groupname.domain.io/</a></strong></p><h2 id="接口的版本-API-Version"><a href="#接口的版本-API-Version" class="headerlink" title="接口的版本(API Version)"></a>接口的版本(API Version)</h2><p>应该将API的版本号放入URL合适的层次。注意这里的Version即不表示客户端的版本，亦不表示服务器中服务的对应版本，而是特指该接口的版本。一般用来处理对接口做升级的情况。</p><p><strong>规范: <a href="https://api-[env-name].groupname.domain.io/mobile/[version]/" target="_blank" rel="noopener">https://api-[env-name].groupname.domain.io/mobile/[version]/</a></strong></p><ul><li>v1和v2的区别，应该表示且仅表示接口的区别。</li><li>不要发布无版本号的接口。</li><li>使用简单的数字。</li><li>服务分组加版本两个变量来共同决定接口的实现逻辑。</li></ul><h2 id="路径-EndPoints-端点-命名"><a href="#路径-EndPoints-端点-命名" class="headerlink" title="路径(EndPoints,端点)命名"></a>路径(EndPoints,端点)命名</h2><blockquote><p>此原则仅供参考。准备重写。<br>路径表示API的具体URL,每个URL唯一的表示一种资源。所以网址中不应该有动词，只应该有名词。而且所用的名词往往与代表的对象名称对应，一般来说某一种记录的集合，所以API名词当中应该使用复数。</p></blockquote><ul><li>URL: /cards/getCardById/{id}  =&gt; HTTP GET: /cards/{id}</li><li>如果某些动作是HTTP动词表达不了的，那么应该把动作当成资源去处理。<ul><li>POST /accounts/1/transfer/500/to/2/ =&gt; POST /transaction?from=1&amp;to=2&amp;amount=500.00</li></ul></li><li>为了保持简单，只对所有资源使用复数。<ul><li>/setting =&gt; /settings</li><li>/user =&gt; /users</li></ul></li><li>资源之间的层级关系应该表述清楚。<ul><li>GET /hotels/1312/homes/ 返回酒店1312的所有房间。</li><li>GET /hotels/1312/homes/1209 返回酒店1312的1209房间。</li></ul></li></ul><h2 id="HTTP动词-HTTP-Verbs"><a href="#HTTP动词-HTTP-Verbs" class="headerlink" title="HTTP动词(HTTP Verbs)"></a>HTTP动词(HTTP Verbs)</h2><ul><li>GET (SELECT): 从服务器取出对应的资源。</li><li>POST (CREATE): 新建一个资源。</li><li>PUT (UPDATE): 在服务器更新资源。(客户端提供改变后的完整的资源,所以应该少用)</li><li>PATCH (UPDATE): 在服务器更新资源。(客户端提供改变的属性)</li><li>DELETE (DELETE): 删除资源。</li><li>HEAD: 获取资源的元数据。</li><li>OPTIONS: 获取信息，关于哪些资源的哪些属性是客户端可以改变的。</li></ul><h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><ul><li>此处的最佳实践是，大家约定好我们的动作处理原则，并且在整个系统（组织或者公司）内保持统一。</li><li>GET方法不应该涉及状态改变。</li><li>很多时候我们还需要收集客户端的信息,但是REST本身是无状态的，所以收集的时候，应该独立于REST API的设计原则，独立设计体系来收集类似于Client, cookie, ip和device等信息。</li></ul><h2 id="不符合CRUD的情况"><a href="#不符合CRUD的情况" class="headerlink" title="不符合CRUD的情况"></a>不符合CRUD的情况</h2><p>一般有如下建议</p><ul><li>使用POST 重构行为的action</li><li>增加控制参数(整体来约定)</li><li>把动作转换成资源</li></ul><h2 id="过滤信息-Filtering"><a href="#过滤信息-Filtering" class="headerlink" title="过滤信息(Filtering)"></a>过滤信息(Filtering)</h2><p>API应该提供参数，过滤返回结果。因为服务器端某个资源数量可能很多。比如用户的订单数，全国的酒店数等。过滤的语义应该包括对数据集合的过滤，排序，选择，和分页等功能。</p><ul><li>?limit=10: 返回指定条目的数据。</li><li>?offset=10: 指定返回记录的开始位置。</li><li>?pageNumber=2&amp;perSize=100: 指定第几页，以及每页的记录数量。</li><li>?sortBy=time&amp;order=desc: 排序顺序及属性。</li><li>?type=1: 指定筛选条件。</li></ul><h3 id="最佳实践："><a href="#最佳实践：" class="headerlink" title="最佳实践："></a>最佳实践：</h3><ul><li>实际上，我们在处理API业务时，不可能像数据库查询那么简洁容易。所以参数定义应该更加单一职责，更加严谨。</li><li>总是可以在输入参数中设计一个客户端需要的attrList, 由使用者来指定需要的属性列表。</li><li>参数的设计上应该允许冗余。</li><li>可以使用HTTP的定制头: X-Total-Count表示资源总数。</li></ul><h2 id="状态码-Status-Codes"><a href="#状态码-Status-Codes" class="headerlink" title="状态码(Status Codes)"></a>状态码(Status Codes)</h2><ul><li>这里一般实践是包含两层，一层是中间件(比如网关，nginx，tomcat)返回的HTTP请求本身的状态码。另外还包含服务本身返回的状态码设计。  </li><li>这里需要单独开辟一个章节来定义状态码，后文会给出一个最佳实践。</li><li><strong>一个好的可以坚持的原则是，服务本身返回的状态码的前缀，应该和网关那一层保持一致。这样可以有最好的层次关系。</strong>. </li><li>比如40001表示请求参数错误，其中400表示INVALID REQUEST。01表示具体的错误为参数错误。</li></ul><h2 id="错误处理-Error-Handling"><a href="#错误处理-Error-Handling" class="headerlink" title="错误处理(Error Handling)"></a>错误处理(Error Handling)</h2><p>如果状态码不是正确的返回，就应该返回出错信息。尽量使用详细的错误信息。<br>一个好的实践是，出错信息应该包含:<br>userMessage: 显示给用户的。<br>internalMessage: 显示给程序员调试用的。<br>code: 编码<br>guideline: 参考解决指南。</p><h2 id="返回结果-Response"><a href="#返回结果-Response" class="headerlink" title="返回结果(Response)"></a>返回结果(Response)</h2><ul><li>按照RESTful架构<strong>“宽进严出”</strong>的原则，返回应该被严格定义。</li><li>全部使用JSON返回结构。</li><li>基本约定:<ul><li>GET /collection: 返回资源列表 </li><li>GET /collection/resource: 返回单个对象</li><li>POST /collection/resource: 返回新生成的对象。</li><li>PUT /collection/resource: 返回完整的更新后的资源对象。</li><li>PATCH /collection/resource: 返回完整的更新后的资源对象。</li><li>DELETE /collection/resource: 返回一个空文档。</li></ul></li><li>实际执行过程中远比这个复杂，但是我们仍然可以有一些基本原则。</li></ul><h2 id="使用HATEOAS构建Hypermedia-APIs"><a href="#使用HATEOAS构建Hypermedia-APIs" class="headerlink" title="使用HATEOAS构建Hypermedia APIs"></a>使用HATEOAS构建Hypermedia APIs</h2><p>超媒体API很可能是RESTful API设计的未来。它们实际上是一个非常惊人的概念，可以追溯到HTTP和HTML的工作原理。我们可以使用HATEOAS in Spring来构建Hypermedia APIs,而在此之前，约定更加重要。</p><p>一个好的Hypermedia范例是 <a href="api.github.com">api.github.com</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"current_user_url"</span>: <span class="string">"https://api.github.com/user"</span>,</span><br><span class="line">  <span class="attr">"current_user_authorizations_html_url"</span>: <span class="string">"https://github.com/settings/connections/applications&#123;/client_id&#125;"</span>,</span><br><span class="line">  <span class="attr">"authorizations_url"</span>: <span class="string">"https://api.github.com/authorizations"</span>,</span><br><span class="line">  <span class="attr">"code_search_url"</span>: <span class="string">"https://api.github.com/search/code?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;"</span>,</span><br><span class="line">  <span class="attr">"commit_search_url"</span>: <span class="string">"https://api.github.com/search/commits?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;"</span>,</span><br><span class="line">  <span class="attr">"emails_url"</span>: <span class="string">"https://api.github.com/user/emails"</span>,</span><br><span class="line">  <span class="attr">"emojis_url"</span>: <span class="string">"https://api.github.com/emojis"</span>,</span><br><span class="line">  <span class="attr">"events_url"</span>: <span class="string">"https://api.github.com/events"</span>,</span><br><span class="line">  <span class="attr">"feeds_url"</span>: <span class="string">"https://api.github.com/feeds"</span>,</span><br><span class="line">  <span class="attr">"followers_url"</span>: <span class="string">"https://api.github.com/user/followers"</span>,</span><br><span class="line">  <span class="attr">"following_url"</span>: <span class="string">"https://api.github.com/user/following&#123;/target&#125;"</span>,</span><br><span class="line">  <span class="attr">"gists_url"</span>: <span class="string">"https://api.github.com/gists&#123;/gist_id&#125;"</span>,</span><br><span class="line">  <span class="attr">"hub_url"</span>: <span class="string">"https://api.github.com/hub"</span>,</span><br><span class="line">  <span class="attr">"issue_search_url"</span>: <span class="string">"https://api.github.com/search/issues?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;"</span>,</span><br><span class="line">  <span class="attr">"issues_url"</span>: <span class="string">"https://api.github.com/issues"</span>,</span><br><span class="line">  <span class="attr">"keys_url"</span>: <span class="string">"https://api.github.com/user/keys"</span>,</span><br><span class="line">  <span class="attr">"notifications_url"</span>: <span class="string">"https://api.github.com/notifications"</span>,</span><br><span class="line">  <span class="attr">"organization_repositories_url"</span>: <span class="string">"https://api.github.com/orgs/&#123;org&#125;/repos&#123;?type,page,per_page,sort&#125;"</span>,</span><br><span class="line">  <span class="attr">"organization_url"</span>: <span class="string">"https://api.github.com/orgs/&#123;org&#125;"</span>,</span><br><span class="line">  <span class="attr">"public_gists_url"</span>: <span class="string">"https://api.github.com/gists/public"</span>,</span><br><span class="line">  <span class="attr">"rate_limit_url"</span>: <span class="string">"https://api.github.com/rate_limit"</span>,</span><br><span class="line">  <span class="attr">"repository_url"</span>: <span class="string">"https://api.github.com/repos/&#123;owner&#125;/&#123;repo&#125;"</span>,</span><br><span class="line">  <span class="attr">"repository_search_url"</span>: <span class="string">"https://api.github.com/search/repositories?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;"</span>,</span><br><span class="line">  <span class="attr">"current_user_repositories_url"</span>: <span class="string">"https://api.github.com/user/repos&#123;?type,page,per_page,sort&#125;"</span>,</span><br><span class="line">  <span class="attr">"starred_url"</span>: <span class="string">"https://api.github.com/user/starred&#123;/owner&#125;&#123;/repo&#125;"</span>,</span><br><span class="line">  <span class="attr">"starred_gists_url"</span>: <span class="string">"https://api.github.com/gists/starred"</span>,</span><br><span class="line">  <span class="attr">"team_url"</span>: <span class="string">"https://api.github.com/teams"</span>,</span><br><span class="line">  <span class="attr">"user_url"</span>: <span class="string">"https://api.github.com/users/&#123;user&#125;"</span>,</span><br><span class="line">  <span class="attr">"user_organizations_url"</span>: <span class="string">"https://api.github.com/user/orgs"</span>,</span><br><span class="line">  <span class="attr">"user_repositories_url"</span>: <span class="string">"https://api.github.com/users/&#123;user&#125;/repos&#123;?type,page,per_page,sort&#125;"</span>,</span><br><span class="line">  <span class="attr">"user_search_url"</span>: <span class="string">"https://api.github.com/search/users?q=&#123;query&#125;&#123;&amp;page,per_page,sort,order&#125;"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="标准请求定义"><a href="#标准请求定义" class="headerlink" title="标准请求定义"></a>标准请求定义</h2><p>标准的请求定义当中有很多最佳实践，比如Content-Type等等。好的实践是，我们早早的用很小的代价把content-type, language这些加入设计当中，可以避免后续很多问题。后文会给出最佳实践。我们也需要看看,HTTP请求当中，到底包含了哪些东西。</p><h2 id="认证-Authentication"><a href="#认证-Authentication" class="headerlink" title="认证(Authentication)"></a>认证(Authentication)</h2><p>认证的时候取决于API的使用者和生产者之间的关系，以及需要保护的程度。目前此处的最佳实践是采用OAuth 2.0当中合适的模式来构建。</p><h2 id="文档-Documentation"><a href="#文档-Documentation" class="headerlink" title="文档(Documentation)"></a>文档(Documentation)</h2><p>使用Swagger API+JSON，进行文档管理和信息描述。定义一个标准的，语言无关的，供人和计算机理解服务的文档。类似于SOAP当中的WSDL。</p><ul><li>需要满足API自动生成同步的在线文档。</li><li>可以用于API设计review。</li><li>方便测试人员了解API定义。</li><li>可以作为客户产品文档的一部分进行发布。</li><li>可以通过API Swagger文档生成使用者和生产者的骨架代码。</li><li>由于API的灵活性，此处一般不做严格要求。</li></ul><h1 id="一个文档规范示范"><a href="#一个文档规范示范" class="headerlink" title="一个文档规范示范"></a>一个文档规范示范</h1><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;类似于阿里巴巴的开发规范或者谷歌的开发规范，API设计是目前很多场景下的基本功，所以这里给出一个笔者的最佳实践(Best Practice).&lt;/p&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="技术专题" scheme="http://blog.xiaoyuyu.net/tags/%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98/"/>
    
      <category term="API" scheme="http://blog.xiaoyuyu.net/tags/API/"/>
    
      <category term="设计指南" scheme="http://blog.xiaoyuyu.net/tags/%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97/"/>
    
      <category term="Rest" scheme="http://blog.xiaoyuyu.net/tags/Rest/"/>
    
      <category term="微服务" scheme="http://blog.xiaoyuyu.net/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>84-github配置当中遇到的一个小坑</title>
    <link href="http://blog.xiaoyuyu.net/post/87088a2b.html"/>
    <id>http://blog.xiaoyuyu.net/post/87088a2b.html</id>
    <published>2019-01-06T03:05:33.000Z</published>
    <updated>2019-09-17T02:52:36.347Z</updated>
    
    <content type="html"><![CDATA[<p>明明已经在github配置了sshkey，却还是提示没有权限。。</p><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Cloning into 'XXXX'...</span><br><span class="line">Username for 'https://github.com': shengl</span><br><span class="line">Password for 'https://shengl@github.com': </span><br><span class="line">remote: Password authentication is not available for Git operations.</span><br><span class="line">remote: You must use a personal access token or SSH key.</span><br><span class="line">remote: See https://github.com/settings/tokens or https://github.com/settings/ssh</span><br><span class="line">fatal: unable to access 'https://github.com/XXXX/XXXX': The requested URL returned error: 403</span><br></pre></td></tr></table></figure><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><ul><li>首先查看<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">https://github.com/settings/ssh</a> 的sshkey配置，确认是可用的ssh key，并且查看本地的sshkey是否一致 </li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/shengl-github.pub</span><br></pre></td></tr></table></figure><ul><li>再次clone，仍然是同样的报错</li><li>校验配置 ,返回如下 </li></ul><blockquote><p>ssh -vT <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> </p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">...</span><br><span class="line">debug1: No more authentication methods to try.</span><br><span class="line">git@github.com: Permission denied (publickey).</span><br></pre></td></tr></table></figure><ul><li>找到原因，当前ssh key未被启用,启动私钥即可</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~/.ssh/shengl-github</span><br><span class="line">Identity added: /Users/shengl/.ssh/shengl-github (/Users/shengl/.ssh/shengl-github)</span><br></pre></td></tr></table></figure><ul><li>再次运行校验配置 ssh -vT <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> 则已经成功。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">...</span><br><span class="line">debug1: client_input_channel_req: channel 0 rtype exit-status reply 0</span><br><span class="line">Hi shengl! You've successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><ul><li>注意，此时应该使用git协议拷贝代码</li></ul><blockquote><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:<em>[org-name]/[project-name]</em>.git</p></blockquote><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;明明已经在github配置了sshkey，却还是提示没有权限。。&lt;/p&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="github" scheme="http://blog.xiaoyuyu.net/tags/github/"/>
    
      <category term="git" scheme="http://blog.xiaoyuyu.net/tags/git/"/>
    
      <category term="问题解决" scheme="http://blog.xiaoyuyu.net/tags/%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title>81-工具集合-持续更新</title>
    <link href="http://blog.xiaoyuyu.net/post/ae403e3a.html"/>
    <id>http://blog.xiaoyuyu.net/post/ae403e3a.html</id>
    <published>2018-11-04T14:34:06.000Z</published>
    <updated>2019-09-17T02:52:36.347Z</updated>
    
    <content type="html"><![CDATA[<p>工具和模板可以沉淀方法。方法论可以指导工具的使用。好的工具和方法对于我们缺一不可。</p><p>工具，模板和模型，方法论是三个层面上，但是相辅相成的东西。如何合理的应用决定了我们的效率和结果。</p><a id="more"></a><blockquote><p>后续我会准备一个更详细的思维导图。涵盖各个方面。</p></blockquote><h1 id="常规工具"><a href="#常规工具" class="headerlink" title="常规工具"></a>常规工具</h1><ul><li>财务记账: 随手记</li><li>万金油: Excel</li></ul><h1 id="时间管理-amp-精力管理"><a href="#时间管理-amp-精力管理" class="headerlink" title="时间管理&amp;精力管理"></a>时间管理&amp;精力管理</h1><ul><li>任务管理和追踪: teambition</li><li>时间管理&amp;智能提醒: 滴答清单</li><li>时间review: 34coins, 正准备写一篇34金币管理法相关的文章。</li><li>任务管理+智能提醒+追踪+时间管理: 奇妙清单,参见<a href="https://blog.xiaoyuyu.net/post/500a18f1.html">《79-时间管理系列-工具-奇妙清单》</a></li></ul><h1 id="知识管理"><a href="#知识管理" class="headerlink" title="知识管理"></a>知识管理</h1><ul><li>网盘: 好像只剩下百度云了，如果有条件，可以用google drive。</li><li>协作: google doc系列绝对好用。是word + 协作的升级版。</li><li>知识库和笔记: 还是推荐有道云笔记吧。</li></ul><h1 id="Mac下常规的工具说明"><a href="#Mac下常规的工具说明" class="headerlink" title="Mac下常规的工具说明"></a>Mac下常规的工具说明</h1><ul><li>Markdown编辑器: MacDown</li><li>思维导图工具: MindMaster</li><li>文本编辑器: Sublime</li><li>浏览器: Chrome, Firefox</li><li>记事本: 系统自带备忘录</li></ul><p>… TODO 未完待续。</p><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工具和模板可以沉淀方法。方法论可以指导工具的使用。好的工具和方法对于我们缺一不可。&lt;/p&gt;
&lt;p&gt;工具，模板和模型，方法论是三个层面上，但是相辅相成的东西。如何合理的应用决定了我们的效率和结果。&lt;/p&gt;
    
    </summary>
    
      <category term="术与道" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%8E%E9%81%93/"/>
    
    
      <category term="工具" scheme="http://blog.xiaoyuyu.net/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="方法论" scheme="http://blog.xiaoyuyu.net/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
      <category term="技术专题" scheme="http://blog.xiaoyuyu.net/tags/%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98/"/>
    
      <category term="奇技淫巧" scheme="http://blog.xiaoyuyu.net/tags/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>79-时间管理系列-工具-奇妙清单</title>
    <link href="http://blog.xiaoyuyu.net/post/500a18f1.html"/>
    <id>http://blog.xiaoyuyu.net/post/500a18f1.html</id>
    <published>2018-11-03T13:17:56.000Z</published>
    <updated>2019-09-17T02:52:36.345Z</updated>
    
    <content type="html"><![CDATA[<p>一直在尝试各种时间管理工具和任务管理工具，而且比较确定要把他们三者合为一。  </p><ul><li>任务管理, teambition比较好。</li><li>智能提醒, 滴答清单做的不错。</li><li>任务和时间review,最好用的是34coins。</li></ul><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><blockquote><p>为什么我们需要时间和精力&amp;任务管理?</p></blockquote><ul><li>随着事情的增多，在努力的基础上，如何合理的规划时间，最大化利用你的时间？学生时代我就会用作息时间表来合理的规划时间。方法和努力一样重要。</li><li>你总是会忘记很多琐事，而有时候会因为琐事忘了重要的事情。</li><li>好的任务管理可以帮助你梳理思路，分清主次。</li><li>好的智能提醒或者日程工具可以减少你的精力消耗，让你更聚焦于核心事务。</li></ul><blockquote><p>为什么最先写的是奇妙清单?</p></blockquote><ul><li>笔者在探索将序言中3者功能整合起来的最佳方式，同时应该用合理的精力去管理。之前用了一年多的滴答清单，发现效率还不如34coins更高。但是34coins对任务管理并不友好，所以在权衡这两者之间的关系。</li></ul><h1 id="初识奇妙清单"><a href="#初识奇妙清单" class="headerlink" title="初识奇妙清单?"></a>初识奇妙清单?</h1><ul><li>对于大多数人来说，应该让任务管理变得更容易，但是不需要复杂的层次和设计逻辑。否则容易本末倒置。毕竟我们个人的管理不需要协同。所以jira不合适的。</li><li>需要降低它的使用门槛。</li><li>它的层次结构是： 文件夹-&gt;清单列表-&gt;清单项目-&gt;子任务。 同时它会将星标的和当天任务，当周任务都抽离出来，自动整合。所以这里就兼具了针对各种主题规划任务（可能是一年的），但是自动归纳到每天的执行流程中（当天任务，当周任务）。对大多数人来说，已经足够用了。</li><li>所有平台都有，所以我的安卓手机，苹果手机，笔记本，公司电脑，浏览器，微信公众号。都能用。</li><li>他还具备了对于普通家庭和朋友协作足够使用的协同功能。</li><li>至少，我现在可以把他的任务管理（规划）和智能提醒结合起来了。</li></ul><h1 id="基本教程"><a href="#基本教程" class="headerlink" title="基本教程"></a>基本教程</h1><h1 id="一些原则"><a href="#一些原则" class="headerlink" title="一些原则"></a>一些原则</h1><ul><li>用标签可以来标志不同清单项之间的联系。</li><li>给任务加上 「#重要紧急」、「#重要不紧急」、「#紧急不重要」，「#不紧急不重要」等标签，然后可以用搜索来筛选。</li><li>应该定义一个清单创建的规则，包括命名规则，时间规则，正文规则，标签规则，优先级规则。方便统一整合。</li></ul><h1 id="创建任务的技巧"><a href="#创建任务的技巧" class="headerlink" title="创建任务的技巧"></a>创建任务的技巧</h1><h2 id="可以直接发送邮件"><a href="#可以直接发送邮件" class="headerlink" title="可以直接发送邮件"></a>可以直接发送邮件</h2><ul><li>第一次发送邮件，会收到回复‘启用此帐户的“电邮至奇妙清单”功能。’，点击确认。</li><li>发送邮件到 <a href="mailto:me@wunderlist.com" target="_blank" rel="noopener">me@wunderlist.com</a>。</li><li>清单项目会加入到「收件箱」清单。</li><li>邮件主题会生成清单标题。</li><li>邮件正文会生成备注。</li></ul><center><img src="/img/2018/2018-11-03-01.png" alt="发送邮件"> </center><br><center>图1 发送邮件</center><center><img src="/img/2018/2018-11-03-02.png" alt="发送邮件"> </center><br><center>图2 清单创建效果</center><h2 id="使用浏览器插件"><a href="#使用浏览器插件" class="headerlink" title="使用浏览器插件"></a>使用浏览器插件</h2><ul><li>直接访问<a href="https://chrome.google.com/webstore/detail/wunderlist-new-tab/fgikemaeelgbhjnhnnahcpkjpafaeion" target="_blank" rel="noopener">奇妙清单的Chrome新标签页扩展插件</a></li><li>安装完成后登陆。</li><li>直接打开新的标签页即可添加任务，并且选择加入的清单文件夹。</li></ul><center><img src="/img/2018/2018-11-03-03.png" alt="浏览器插件，新标签创建任务"> </center><br><center>图3 使用浏览器插件，新标签创建任务</center><h2 id="使用addon工具"><a href="#使用addon工具" class="headerlink" title="使用addon工具"></a>使用addon工具</h2><ul><li>直接访问<a href="https://chrome.google.com/webstore/detail/add-to-wunderlist/dmnddeddcgdllibmaodanoonljfdmooc?hl=en" target="_blank" rel="noopener">奇妙清单的add on插件</a></li><li>安装后chrome的右上角会有对应的插件图标。</li></ul><center><img src="/img/2018/2018-11-03-04.png" alt="使用浏览器Addon插件"> </center><br><center>图4 使用浏览器Addon插件</center><h2 id="使用ios的分享功能"><a href="#使用ios的分享功能" class="headerlink" title="使用ios的分享功能"></a>使用ios的分享功能</h2><ul><li>只要在系统分享设置中打开“奇妙清单”，即可随时将文章，网页或者应用分享到“随后阅读”清单。你也可以自行设置。</li><li>这个功能真的很有利于你将碎片化时间整合起来。</li></ul><center><img src="/img/2018/2018-11-03-05.png" alt="分享设置,以UC浏览器为例"> </center><br><center>图5 分享设置,以UC浏览器为例</center> <h1 id="效率提升"><a href="#效率提升" class="headerlink" title="效率提升"></a>效率提升</h1><h2 id="将奇妙清单同步到日历"><a href="#将奇妙清单同步到日历" class="headerlink" title="将奇妙清单同步到日历"></a>将奇妙清单同步到日历</h2><ul><li>账户设置-&gt;日历提要-&gt;连接。</li><li>即可识别并且同步任务到日历。你可以设置为每天同步。</li><li>上面首先会识别系统的日历订阅地址，理论上应该也可以同步到google calendar。不过用了奇妙清单，我应该不会再用google calendar了。</li></ul><h2 id="使用标签功能，做跨清单列表的筛选"><a href="#使用标签功能，做跨清单列表的筛选" class="headerlink" title="使用标签功能，做跨清单列表的筛选"></a>使用标签功能，做跨清单列表的筛选</h2><ul><li>你可以给每个任务项目加上若干标签，然后通过搜索功能中标签视图查看该标签下的所有事项。</li></ul><h2 id="智能清单设置"><a href="#智能清单设置" class="headerlink" title="智能清单设置"></a>智能清单设置</h2><ul><li>系统默认提供了「全部」，「已完成」，「本周」，「今天」，「星标任务」，「分配给我」这6个智能清单。他们会自动聚合各个对应的任务。</li><li>每个聚合清单都有「自动」，「隐藏」，「可见」等三个选项。</li><li>建议选项:<ul><li>「全部」，「已完成」设置为隐藏，因为一般只有回顾的时候才会用到这两个清单。</li><li>星标任务应该保持一直可见，用它来管理优先级最好不过。视情况，你还可以给标签按照四象限管理法则来管理。给任务加上 「#重要紧急」、「#重要不紧急」、「#紧急不重要」，「#不紧急不重要」等标签，然后可以用搜索来筛选。</li></ul></li></ul><h2 id="通用设置"><a href="#通用设置" class="headerlink" title="通用设置"></a>通用设置</h2><ul><li>建议将添加任务到清单顶部，Dock上的角标显示到期&amp;逾期的任务。</li></ul><h1 id="更进一步"><a href="#更进一步" class="headerlink" title="更进一步"></a>更进一步</h1><ul><li>清单列表分为两类。一类是系统根据任务属性智能聚合出来的清单。一类是自己创建的。</li><li>在创建清单清单之前，我已经画出了一个完整的关于家庭生活的思维导图。在此基础上，分门别类的包括了投资，财务，健康医疗，工作，学习等方方面面，根据这样一个思维导图，你可以更好的归纳整理你的日常生活。也可以更好的创建清单。</li><li>如果一个清单列表会存在大于3个月才创建，否则，可以放在「收件箱」或者杂项里面。适当的归类，让每个清单里面有合理数量（一个电脑屏幕或者两～三页手机屏幕可以显示下来）。</li><li>可以尝试用标签来解决分类的问题。</li><li>每天都要完成的事情，重复高效的完成它。我已经用奇妙清单将每天的时间分为了13个时间段，建立了一个「每周schedule」的清单，这个相当于一个作息时间表。然后我要做的，是拿清单中的任务去填满每一天。</li><li>每天要设置一些整块的时间，去完成一些专项活动。这些专项活动，可以是你清单中那些重要的，关键的事情。每周的整块时间内容可以不一样。</li><li>每月的事项同样也可以归纳出来，作为一个清单存在。比如每月的信用卡还款，投资计划，每月财务review，健身，爬山，采购。。等等。</li><li>建立一个清单的建立规则。至少包括”到期日”，重复频率，提醒时间等。</li><li>回顾你的清单。审视你的未完成事项。</li><li>这里我采用了34coins的方法论，来建立我的每天的日常清单。所以目前两者还没有完全结合，只能依赖我的执行了。：）</li></ul><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直在尝试各种时间管理工具和任务管理工具，而且比较确定要把他们三者合为一。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;任务管理, teambition比较好。&lt;/li&gt;
&lt;li&gt;智能提醒, 滴答清单做的不错。&lt;/li&gt;
&lt;li&gt;任务和时间review,最好用的是34coins。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="术与道" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%8E%E9%81%93/"/>
    
    
      <category term="工具" scheme="http://blog.xiaoyuyu.net/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="奇技淫巧" scheme="http://blog.xiaoyuyu.net/tags/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>78-ElasticSearch组合实现pinyin中文分词及自动补全</title>
    <link href="http://blog.xiaoyuyu.net/post/dd5c815a.html"/>
    <id>http://blog.xiaoyuyu.net/post/dd5c815a.html</id>
    <published>2018-10-29T15:48:59.000Z</published>
    <updated>2019-09-17T02:52:36.345Z</updated>
    
    <content type="html"><![CDATA[<p>需要组合Elastic Search的中文分词，拼音，自动补全，错别字或者英文拼写错误等功能。还要支持热点词。</p><a id="more"></a><h1 id="IK中文分词"><a href="#IK中文分词" class="headerlink" title="IK中文分词"></a>IK中文分词</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>./bin/elasticsearch-plugin install <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.3/elasticsearch-analysis-ik-5.5.3.zip" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.3/elasticsearch-analysis-ik-5.5.3.zip</a> # 需要安装和es对应一致的IK版本。</p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>ik的配置文件位置在 es/config/analysis-ik<br>vim IKAnalyzer.cfg.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">comment</span>&gt;</span>IK Analyzer 扩展配置<span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"ext_dict"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"ext_stopwords"</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;entry key="remote_ext_dict"&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;entry key="remote_ext_stopwords"&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="测试分词器效果"><a href="#测试分词器效果" class="headerlink" title="测试分词器效果"></a>测试分词器效果</h3><ul><li>ik_max_word: 尽量多的分词</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET 'http://localhost:9200/_analyze/?pretty' -d '&#123;</span><br><span class="line">  "analyzer":"ik_max_word",</span><br><span class="line">  "text":"中华人民共和国国歌"</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><ul><li>返回值如下</li></ul><pre>{  "tokens" : [    {      "token" : "中华人民共和国",      "start_offset" : 0,      "end_offset" : 7,      "type" : "CN_WORD",      "position" : 0    },    {      "token" : "中华人民",      "start_offset" : 0,      "end_offset" : 4,      "type" : "CN_WORD",      "position" : 1    },    {      "token" : "中华",      "start_offset" : 0,      "end_offset" : 2,      "type" : "CN_WORD",      "position" : 2    },    {      "token" : "华人",      "start_offset" : 1,      "end_offset" : 3,      "type" : "CN_WORD",      "position" : 3    },    {      "token" : "人民共和国",      "start_offset" : 2,      "end_offset" : 7,      "type" : "CN_WORD",      "position" : 4    },    {      "token" : "人民",      "start_offset" : 2,      "end_offset" : 4,      "type" : "CN_WORD",      "position" : 5    },    {      "token" : "共和国",      "start_offset" : 4,      "end_offset" : 7,      "type" : "CN_WORD",      "position" : 6    },    {      "token" : "共和",      "start_offset" : 4,      "end_offset" : 6,      "type" : "CN_WORD",      "position" : 7    },    {      "token" : "国",      "start_offset" : 6,      "end_offset" : 7,      "type" : "CN_CHAR",      "position" : 8    },    {      "token" : "国歌",      "start_offset" : 7,      "end_offset" : 9,      "type" : "CN_WORD",      "position" : 9    }  ]}</pre><ul><li>ik_smart智能分词</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET 'http://localhost:9200/_analyze/?pretty' -d '&#123;</span><br><span class="line">  "analyzer":"ik_smart",</span><br><span class="line">  "text":"中华人民共和国国歌"</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><ul><li>返回值</li></ul><pre>{  "tokens" : [    {      "token" : "中华人民共和国",      "start_offset" : 0,      "end_offset" : 7,      "type" : "CN_WORD",      "position" : 0    },    {      "token" : "国歌",      "start_offset" : 7,      "end_offset" : 9,      "type" : "CN_WORD",      "position" : 1    }  ]}</pre><h3 id="创建一个使用中文分词器的索引"><a href="#创建一个使用中文分词器的索引" class="headerlink" title="创建一个使用中文分词器的索引"></a>创建一个使用中文分词器的索引</h3><h4 id="查看当前索引"><a href="#查看当前索引" class="headerlink" title="查看当前索引"></a>查看当前索引</h4><blockquote><p>curl -XGET ‘localhost:9200/_cat/indices?v&amp;pretty’ # 查看当前索引</p></blockquote><h4 id="创建空索引"><a href="#创建空索引" class="headerlink" title="创建空索引"></a>创建空索引</h4><blockquote><p>curl -XPUT ‘localhost:9200/zhongwen/?pretty’</p></blockquote><h4 id="设置映射类型"><a href="#设置映射类型" class="headerlink" title="设置映射类型"></a>设置映射类型</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'localhost:9200/zhongwen/news/_mapping?pretty' -d '&#123;</span><br><span class="line">"zhongwen":&#123;</span><br><span class="line">    "_all":&#123;</span><br><span class="line">        "analyzer":"ik_max_word",</span><br><span class="line">        "search_analyzer":"ik_max_word",</span><br><span class="line">        "term_vector":"no",</span><br><span class="line">        "store":"false"</span><br><span class="line">    &#125;,</span><br><span class="line">    "properties":&#123;</span><br><span class="line">        "content":&#123;</span><br><span class="line">            "type":"string",</span><br><span class="line">            "store":"no",</span><br><span class="line">            "term_vector":"with_position_offsets",</span><br><span class="line">            "analyzer":"ik_max_word",</span><br><span class="line">            "search_analyzer":"ik_max_word",</span><br><span class="line">            "include_in_all":"true",</span><br><span class="line">            "boost":8</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;'</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 测试</span><br><span class="line"><span class="meta">#</span>## 插入数据</span><br><span class="line">curl -XPOST 'http://localhost:9200/zhongwen/news/?pretty' -d'&#123;"content":"刘德华"&#125;'   </span><br><span class="line">curl -XPOST 'http://localhost:9200/zhongwen/news/?pretty' -d'&#123;"content":"中华人民共和国国歌"&#125;'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>## 测试</span><br><span class="line">TODO 待补充</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> CRF中文分词</span><br><span class="line">TODO 待补充</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> pinyin插件</span><br><span class="line"><span class="meta">#</span># 安装</span><br><span class="line"><span class="meta">&gt;</span> ./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-pinyin/releases/download/v5.5.3/elasticsearch-analysis-pinyin-5.5.3.zip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 配置</span><br><span class="line">TODO 好像不需要配置</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 基本操作</span><br><span class="line"><span class="meta">#</span>## 创建pinyin索引</span><br><span class="line">```shell</span><br><span class="line">curl -XPUT 'http://localhost:9200/pinyin_plug_test_index/?pretty' -d ' </span><br><span class="line">&#123;</span><br><span class="line">    "index" : &#123;</span><br><span class="line">        "analysis" : &#123;</span><br><span class="line">            "analyzer" : &#123;</span><br><span class="line">                "pinyin_analyzer" : &#123;</span><br><span class="line">                    "tokenizer" : "my_pinyin"</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            "tokenizer" : &#123;</span><br><span class="line">                "my_pinyin" : &#123;</span><br><span class="line">                    "type" : "pinyin",</span><br><span class="line">                    "keep_separate_first_letter" : false,</span><br><span class="line">                    "keep_full_pinyin" : true,</span><br><span class="line">                    "keep_original" : true,</span><br><span class="line">                    "limit_first_letter_length" : 16,</span><br><span class="line">                    "lowercase" : true,</span><br><span class="line">                    "remove_duplicated_term" : true</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><h2 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h2><h3 id="基本测试"><a href="#基本测试" class="headerlink" title="基本测试"></a>基本测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET 'http://localhost:9200/pinyin_plug_test_index/_analyze?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">  "text": ["刘德华"],</span><br><span class="line">  "analyzer": "pinyin_analyzer"</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><p>全部 TODO 参考官方文档 <a href="https://github.com/medcl/elasticsearch-analysis-pinyin" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-pinyin</a></p><h1 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h1><h1 id="热点词"><a href="#热点词" class="headerlink" title="热点词"></a>热点词</h1><h1 id="错别字纠错插件"><a href="#错别字纠错插件" class="headerlink" title="错别字纠错插件"></a>错别字纠错插件</h1><h1 id="整合pinyin及ik中文"><a href="#整合pinyin及ik中文" class="headerlink" title="整合pinyin及ik中文"></a>整合pinyin及ik中文</h1><h2 id="安装及配置"><a href="#安装及配置" class="headerlink" title="安装及配置"></a>安装及配置</h2><p>参见前文</p><h2 id="索引创建及操作"><a href="#索引创建及操作" class="headerlink" title="索引创建及操作"></a>索引创建及操作</h2><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT 'http://localhost:9200/ik_plus_pinyin/?pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">    "index" : &#123;</span><br><span class="line">        "analysis" : &#123;</span><br><span class="line">            "analyzer" : &#123;</span><br><span class="line">                "ngram_pinyin_analyzer" : &#123;</span><br><span class="line">                    "tokenizer" : "keyword",</span><br><span class="line">                    "filter" : ["full_pinyin_with_space","word_delimiter","shingle","remove_whitespace"]</span><br><span class="line">                &#125;, "my_pinyin_analyzer" : &#123;</span><br><span class="line">                    "tokenizer" : "keyword",</span><br><span class="line">                    "filter" : ["full_pinyin_no_space"]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            "filter" :&#123;</span><br><span class="line">                "full_pinyin_no_space" : &#123;</span><br><span class="line">                    "type" : "pinyin",</span><br><span class="line">                    "first_letter" : "none",</span><br><span class="line">                    "padding_char" : ""</span><br><span class="line">            &#125;,"full_pinyin_with_space" : &#123;</span><br><span class="line">                    "type" : "pinyin",</span><br><span class="line">                    "first_letter" : "none",</span><br><span class="line">                    "padding_char" : " "</span><br><span class="line">            &#125;,</span><br><span class="line">             "my_edge_ngram_tokenizer" : &#123;</span><br><span class="line">                        "type" : "edgeNGram",</span><br><span class="line">                        "min_gram" : "2",</span><br><span class="line">                        "max_gram" : "5",</span><br><span class="line">                        "token_chars": [ "letter", "digit" ]</span><br><span class="line">                    &#125;,</span><br><span class="line">                    "remove_whitespace": &#123;</span><br><span class="line">                    "type":       "pattern_replace",</span><br><span class="line">                    "pattern": "\\s+",</span><br><span class="line">                    "replacement":""</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><h3 id="创建type的mapping"><a href="#创建type的mapping" class="headerlink" title="创建type的mapping"></a>创建type的mapping</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST "http://localhost:9200/ik_plus_pinyin/keyword/_mapping?pretty" -d '</span><br><span class="line">&#123;</span><br><span class="line">  "properties": &#123;</span><br><span class="line">    "name1":&#123;</span><br><span class="line">      "type": "text",</span><br><span class="line">      "fields": &#123;</span><br><span class="line">        "pinyin":&#123;</span><br><span class="line">          "type": "string", </span><br><span class="line">          "analyzer": "ngram_pinyin_analyzer"</span><br><span class="line">        &#125;, "full_pinyin":&#123;</span><br><span class="line">          "type": "string", </span><br><span class="line">          "analyzer": "my_pinyin_analyzer"</span><br><span class="line">        &#125;,</span><br><span class="line">        "first_letter":&#123;</span><br><span class="line">          "type": "string", </span><br><span class="line">          "analyzer": "pinyin"</span><br><span class="line">        &#125;,</span><br><span class="line">        "name1":&#123;</span><br><span class="line">          "type": "string", </span><br><span class="line">          "analyzer": "ik_max_word"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><h2 id="基本操作-1"><a href="#基本操作-1" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="构造数据"><a href="#构造数据" class="headerlink" title="构造数据"></a>构造数据</h3><p>curl -XPOST <a href="http://localhost:9200/ik_plus_pinyin/keyword/?pretty" target="_blank" rel="noopener">http://localhost:9200/ik_plus_pinyin/keyword/?pretty</a> -d’{“name1”:”刘德华”}’<br>curl -XPOST <a href="http://localhost:9200/ik_plus_pinyin/keyword/?pretty" target="_blank" rel="noopener">http://localhost:9200/ik_plus_pinyin/keyword/?pretty</a> -d’{“name1”:”中华人民共和国国歌”}’  </p><h3 id="构造测试"><a href="#构造测试" class="headerlink" title="构造测试"></a>构造测试</h3><h4 id="构造一个带权重的测试"><a href="#构造一个带权重的测试" class="headerlink" title="构造一个带权重的测试"></a>构造一个带权重的测试</h4><ul><li>组合了各种情况，拼音，首字母及汉字混合的情况。可以将query字段取值为<br>[“ldh”, “ldehua”, “liu”, “dehua”, “liu hua”, “hua”, “刘”, “德华”, “华”, “l德hua”]</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST 'http://localhost:9200/ik_plus_pinyin/keyword/_search?size=50&amp;pretty' -d '</span><br><span class="line">&#123;</span><br><span class="line">  "query": &#123;</span><br><span class="line">    "query_string": &#123;</span><br><span class="line">      "fields": ["name1^100","name1.full_pinyin^30","name1.pinyin^20","name1.first_letter^10"],</span><br><span class="line">      "query": "l德hua",</span><br><span class="line">      "default_operator": "OR"</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;'</span><br></pre></td></tr></table></figure><ul><li>返回</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "took" : 92,</span><br><span class="line">  "timed_out" : false,</span><br><span class="line">  "_shards" : &#123;</span><br><span class="line">    "total" : 5,</span><br><span class="line">    "successful" : 5,</span><br><span class="line">    "failed" : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  "hits" : &#123;</span><br><span class="line">    "total" : 2,</span><br><span class="line">    "max_score" : 80.25915,</span><br><span class="line">    "hits" : [</span><br><span class="line">      &#123;</span><br><span class="line">        "_index" : "ik_plus_pinyin",</span><br><span class="line">        "_type" : "keyword",</span><br><span class="line">        "_id" : "AWbF8CkihRb6RLuoMFEG",</span><br><span class="line">        "_score" : 80.25915,</span><br><span class="line">        "_source" : &#123;</span><br><span class="line">          "name1" : "刘德华"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        "_index" : "ik_plus_pinyin",</span><br><span class="line">        "_type" : "keyword",</span><br><span class="line">        "_id" : "AWbF8CyChRb6RLuoMFEH",</span><br><span class="line">        "_score" : 4.598851,</span><br><span class="line">        "_source" : &#123;</span><br><span class="line">          "name1" : "中华人民共和国国歌"</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;需要组合Elastic Search的中文分词，拼音，自动补全，错别字或者英文拼写错误等功能。还要支持热点词。&lt;/p&gt;
    
    </summary>
    
      <category term="技术专题" scheme="http://blog.xiaoyuyu.net/categories/%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98/"/>
    
    
      <category term="学习笔记" scheme="http://blog.xiaoyuyu.net/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="ElasticSearch" scheme="http://blog.xiaoyuyu.net/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>77-桥牌的计分方法</title>
    <link href="http://blog.xiaoyuyu.net/post/c94961f9.html"/>
    <id>http://blog.xiaoyuyu.net/post/c94961f9.html</id>
    <published>2018-10-28T16:11:33.000Z</published>
    <updated>2019-09-17T02:52:36.344Z</updated>
    
    <content type="html"><![CDATA[<p>暂时还不敢写别的教程，刚刚开始学习桥牌。虽然现在算分都是由电脑来计算的，但是计算分值仍然是一个必须掌握的技巧。</p><a id="more"></a><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><p>桥牌的净胜分由三部分组成: 基本分（墩分）+ 奖励分 + 罚分。</p><h1 id="基本分计算"><a href="#基本分计算" class="headerlink" title="基本分计算"></a>基本分计算</h1><ul><li>桥牌花色从小到大是低花色(草花,方块),高花色(红心,黑桃).</li></ul><h2 id="花色定约的墩分"><a href="#花色定约的墩分" class="headerlink" title="花色定约的墩分:"></a>花色定约的墩分:</h2><p>♣️和♦️: 基数是6墩，这6墩牌是没有分的，之后每赢一墩牌会计算20分。<br>♥️和♠️: 基数是6墩，这6墩牌是没有分的，之后每赢一墩牌会计算30分。</p><h2 id="无将定约-NT-NoTrump-的墩分"><a href="#无将定约-NT-NoTrump-的墩分" class="headerlink" title="无将定约(NT: NoTrump)的墩分:"></a>无将定约(NT: NoTrump)的墩分:</h2><p>基数是6墩，这6墩牌是没有分的，之后第一墩也就是总第7墩是40分，之后每赢一墩牌会计算30分。<br>TODO: 为什么桥牌要分低花色和高花色？</p><h2 id="定约加倍"><a href="#定约加倍" class="headerlink" title="定约加倍:"></a>定约加倍:</h2><p>顾名思义，如果定约被加倍，则每一墩分数乘以2，如果被再加倍，则每一墩分数乘以4.</p><h2 id="成局定约"><a href="#成局定约" class="headerlink" title="成局定约:"></a>成局定约:</h2><p>当定约的基本墩分达到100分或者以上的时候，称为成局(Game)。所以术语中会把3NT,4♠️和4♥️,5♦️和5♣️的定约称为“叫进局”。<br>3NT: 40+30+30=100.<br>4♠️和4♥️: 30+30+30+30=30✖️4=120分&gt;100.<br>5♦️和5♣️: 20+20+20+20+20=20✖️5=100.  </p><h2 id="当定约的基本分没有达到100分时，都是未成局定约。"><a href="#当定约的基本分没有达到100分时，都是未成局定约。" class="headerlink" title="当定约的基本分没有达到100分时，都是未成局定约。"></a>当定约的基本分没有达到100分时，都是未成局定约。</h2><h2 id="基本分被加倍或者再加倍，也会转换成成局定约。"><a href="#基本分被加倍或者再加倍，也会转换成成局定约。" class="headerlink" title="基本分被加倍或者再加倍，也会转换成成局定约。"></a>基本分被加倍或者再加倍，也会转换成成局定约。</h2><p>6.1 2NT加倍后,(40+30)✖️2=140<br>6.2 1NT被再加倍后,40✖️4=160<br>6.3 2♠️或者2♥️加倍后,(30+30)✖️2=120<br>6.4 1♠️或者1红心被再加倍后,(30)✖️4=120<br>6.5 3♣️或者3♦️加倍后,(20+20+20)✖️2=120<br>6.6 2♣️或者2♦️被再加倍之后，(20+20)✖️4=120<br>所以加倍要慎重!  </p><h1 id="奖励分计算"><a href="#奖励分计算" class="headerlink" title="奖励分计算"></a>奖励分计算</h1><ol><li><p>桥牌的四种定约的级别:<br> 1.1 <strong>未成局</strong>(基本分低于100).<br> 1.2 <strong>成局</strong>(基本分大于等于100)且赢墩小于等于5.<br> 1.3 <strong>小满贯</strong>(Small Slam 赢墩为12).<br> 1.4 <strong>大满贯</strong>(Grand Slam 赢得所有13墩牌).</p></li><li><p><strong>局况(Vulnerability)</strong><br>从发牌开始按照四种顺序循环设置的: 双方无局,南北有局(东西无局),东西有局(南北无局),双方有局。所以一般桥牌的比赛都局数一般会设置为4的整数次数。局况会影响奖励分的计算。</p></li></ol><h2 id="奖励分计算规则"><a href="#奖励分计算规则" class="headerlink" title="奖励分计算规则:"></a>奖励分计算规则:</h2><ul><li>未成局定约: 奖励50分。与局况无关。  </li><li>成局定约:   <ul><li>定约方无局，奖励300分。</li><li>定约方有局，奖励500分。</li></ul></li><li>小满贯定约：<ul><li>定约方无局，除了奖励成局定约奖励的300分以外，再奖励500分的小满贯奖励分。累计800分。</li><li>定约方有局时，除了奖励成局定约奖励的500分以外，再奖励750分的小满贯奖励分，累计1250分，比无局时多了450分。</li></ul></li><li><p>大满贯定约：</p><ul><li>定约方无局，奖励成局定约分300分以外，奖励大满贯的1000分，累计1300.</li><li>定约方有局，奖励成局定约500分以外，再奖励大满贯的1500分，累计2000分。比无局多了700分。</li></ul></li><li><p>也就是说，正好完成定约的奖励分的最高情况，是有局时的大满贯，一共2000分。</p></li></ul><h2 id="超墩奖励"><a href="#超墩奖励" class="headerlink" title="超墩奖励:"></a>超墩奖励:</h2><ul><li>完成没有被加倍的定约时，每超一墩奖励该花色的基本分，也就是♦️和草花20分/墩，♠️和红心30分/墩，无将30分/墩。</li><li>完成加倍定约时，超墩奖励分很复杂。(再次强调，慎重加倍）。<ul><li>定约方无局，超墩与花色无关，不计算墩分，而是<ul><li>被加倍而超墩完成时，每一墩奖励100.</li><li>被再加倍而超墩完成，每一墩奖励200分。</li></ul></li><li>定约方有局，超墩与花色无关，不计算墩分，而是<ul><li>被加倍而完成超墩，每一墩奖励200.</li><li>被再加倍而超墩完成，每一墩奖励400.</li></ul></li></ul></li><li>定约方完成加倍定约(无论是否超墩),都额外奖励50分。</li><li>定约方完成再加倍定约(无论是否超墩),都额外奖励100分。</li></ul><h2 id="小贴士"><a href="#小贴士" class="headerlink" title="小贴士:"></a>小贴士:</h2><ul><li>4♥️超墩1的得分是300奖励分(无局)+30✖️5基本分=450分。5♥️完成的得分也是300奖励分(无局)+30✖️5 =450分，所以大部分情况下，叫到进局即可，也就是4♥️或者4♠️是比5♥️或者5♠️更好的定约，因为后者不会多得分，但是有更多打宕的风险。同理，5NT，4NT也是。</li></ul><h1 id="罚分"><a href="#罚分" class="headerlink" title="罚分"></a>罚分</h1><ul><li>没有被加倍<ul><li>定约方是无局方，每宕一墩罚50分。</li><li>定约方是有局方，每宕一墩罚100分。</li></ul></li><li>定约被加倍时<ul><li>定约方无局，宕一墩罚100，宕二墩罚300，宕三墩罚500，之后每增加一墩罚多300分。(比如7NT被打的宕13，相当于叫了大满贯结果13墩全丢，最多可以罚500+300*10=3500分)</li><li>定约方有局，宕一墩罚200，宕二墩罚500，宕三墩罚800，之后每增加一墩罚多300分。(比如7NT被打的宕13，相当于叫了大满贯结果13墩全丢，最多可以罚800+300*10=3800分)</li></ul></li><li>定约被再加倍时，罚分比上面的情况分别再翻一倍。<strong>所以罚分和是否叫到进局无关，但是和是否有局有关。1NT宕4和3NT宕4的惩罚是一样的。</strong> </li></ul><h1 id="分值计算来指导叫牌。"><a href="#分值计算来指导叫牌。" class="headerlink" title="分值计算来指导叫牌。"></a>分值计算来指导叫牌。</h1><ul><li>进局和小满贯，大满贯情况下，奖励分比墩分多了很多，所以如果能进局而没进局，或者能打满贯没叫大满贯，分差会非常的大。<ul><li>3♥️超墩1=30✖️4+50=170分，而4红心是300分+30✖️4= 420分，一样的赢墩数，多了250分。</li></ul></li><li>如果不能进局，就尽量停在低阶段。</li><li>NT的难度更大，所以3NT就进局了。</li><li>一定要量力而行。</li><li>利用局况，可以适当进行牺牲叫：比如对方有局，对方打成能的800，而你方无局，被打宕也就赔200，那就可以尝试牺牲叫。反之亦然。<p><!--<span id="busuanzi_container_page_pv"> 阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;暂时还不敢写别的教程，刚刚开始学习桥牌。虽然现在算分都是由电脑来计算的，但是计算分值仍然是一个必须掌握的技巧。&lt;/p&gt;
    
    </summary>
    
      <category term="技术专题" scheme="http://blog.xiaoyuyu.net/categories/%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98/"/>
    
    
      <category term="桥牌" scheme="http://blog.xiaoyuyu.net/tags/%E6%A1%A5%E7%89%8C/"/>
    
      <category term="桥牌规则" scheme="http://blog.xiaoyuyu.net/tags/%E6%A1%A5%E7%89%8C%E8%A7%84%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>76-elastic-search-索引别名</title>
    <link href="http://blog.xiaoyuyu.net/post/bd9d21fe.html"/>
    <id>http://blog.xiaoyuyu.net/post/bd9d21fe.html</id>
    <published>2018-10-22T15:10:01.000Z</published>
    <updated>2019-09-17T02:52:36.343Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>索引别名像一个快捷方式或者软连接:<br>    在运行的集群中可以直接无缝切换。<br>    给多个索引分组<br>     给索引的一个子集创建视图   </p></blockquote><a id="more"></a><h1 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法:"></a>基本用法:</h1><ul><li>创建名为my_index_v1的索引,将别名my_index指向它   </li></ul><blockquote><p>curl -X PUT “localhost:9200/my_index_v1”<br>curl -X PUT “localhost:9200/my_index_v1/_alias/my_index”  </p></blockquote><ul><li>检查这个别名指向了哪一个索引:  </li></ul><blockquote><p>curl -X GET “localhost:9200/*/_alias/my_index”</p></blockquote><pre>{"my_index_v1":{"aliases":{"my_index":{}}}}</pre><ul><li>哪些别名指向了这个索引:   <blockquote><p>curl -X GET “localhost:9200/my_index_v1/_alias/*”</p></blockquote></li></ul><ul><li><p>利用索引别名修改映射:</p><pre>curl -X PUT "localhost:9200/my_index_v2" -H 'Content-Type: application/json' -d'{  "mappings": {      "my_type": {          "properties": {              "tags": {                  "type":   "string",                  "index":  "not_analyzed"              }          }      }  }}'</pre></li><li><p>使用reindex的方式重新索引数据。scroll导出数据,bulk导入新的索引。</p></li><li>Scroll API查出第一波数据及获取_scroll游标,去掉sort字段可以加快排序速度.<pre>curl -XGET 'localhost:9200/my_index_v1/_search?scroll=3m' -H 'Content-Type: application/json' -d'{  "query":{      "match_all": {}  },  "sort": ["_doc"],  "size": 2000}</pre></li></ul><pre>{"_scroll_id":"DnF1ZXJ5VGhlbkZldGNoBQAAAAAAAABPFnEwNDBMUERrUW1HZlpEZVJCRkxzRGcAAAAAAAAAUBZxMDQwTFBEa1FtR2ZaRGVSQkZMc0RnAAAAAAAAAE0WcTA0MExQRGtRbUdmWkRlUkJGTHNEZwAAAAAAAABMFnEwNDBMUERrUW1HZlpEZVJCRkxzRGcAAAAAAAAAThZxMDQwTFBEa1FtR2ZaRGVSQkZMc0Rn","took":84,"timed_out":false,"_shards":{"total":5,"successful":5,"failed":0},"hits":{"total":0,"max_score":null,"hits":[]}}</pre><ul><li><p>根据返回的_scroll_id继续向下获取数据,直到结束</p><pre>curl -XGET  'localhost:9200/_search/scroll'  -d'{  "scroll" : "30m",   "scroll_id" : "DnF1ZXJ5VGhlbkZldGNoBQAAAAAAAABPFnEwNDBMUERrUW1HZlpEZVJCRkxzRGcAAAAAAAAAUBZxMDQwTFBEa1FtR2ZaRGVSQkZMc0RnAAAAAAAAAE0WcTA0MExQRGtRbUdmWkRlUkJGTHNEZwAAAAAAAABMFnEwNDBMUERrUW1HZlpEZVJCRkxzRGcAAAAAAAAAThZxMDQwTFBEa1FtR2ZaRGVSQkZMc0Rn" }'</pre></li><li><p>使用bulk API插入数据</p><pre>curl -XPOST 'localhost:9200/my_index_v2/_bulk' -H 'Content-Type: application/json' -d'{"index": {"_index" : "my_index_new", "_type" : "my_type", "_id" : "3"}}{"title" : "2017-01-01"}'</pre></li><li><p>使用原子操作将索引别名指向新的索引。<br><pre><br>curl -X POST “localhost:9200/_aliases” -H ‘Content-Type: application/json’ -d’<br>{<br>  “actions”: [</pre></p><pre><code>{ &quot;remove&quot;: { &quot;index&quot;: &quot;my_index_v1&quot;, &quot;alias&quot;: &quot;my_index&quot; }},{ &quot;add&quot;:    { &quot;index&quot;: &quot;my_index_v2&quot;, &quot;alias&quot;: &quot;my_index&quot; }}</code></pre><p>  ]<br>}’<br></p><p><!--<span id="busuanzi_container_page_pv"> 阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;索引别名像一个快捷方式或者软连接:&lt;br&gt;    在运行的集群中可以直接无缝切换。&lt;br&gt;    给多个索引分组&lt;br&gt;     给索引的一个子集创建视图   &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="学习笔记" scheme="http://blog.xiaoyuyu.net/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Elastic Search" scheme="http://blog.xiaoyuyu.net/tags/Elastic-Search/"/>
    
  </entry>
  
  <entry>
    <title>75-elastic-search-settings-and-mappings</title>
    <link href="http://blog.xiaoyuyu.net/post/b33f37.html"/>
    <id>http://blog.xiaoyuyu.net/post/b33f37.html</id>
    <published>2018-10-21T19:29:13.000Z</published>
    <updated>2019-09-17T02:52:36.343Z</updated>
    
    <content type="html"><![CDATA[<p>elastic search中的配置和mappings定义了索引的基本配置和数据结构及数据结构的基本配置。其中字段的类型类似于关系型数据库里面的字段映射。</p><a id="more"></a><h1 id="Settings"><a href="#Settings" class="headerlink" title="Settings"></a>Settings</h1><h2 id="查看所有索引"><a href="#查看所有索引" class="headerlink" title="查看所有索引"></a>查看所有索引</h2><blockquote><p>curl ‘localhost:9200/_cat/indices?v&amp;pretty’</p></blockquote><pre>shengl-pro:tmp shengl$ curl 'localhost:9200/_cat/indices?v&pretty'health status index       uuid                   pri rep docs.count docs.deleted store.size pri.store.sizeyellow open   address     EvIdMEAdRd2fSNPK2GXOfw   5   1         11            0     45.3kb         45.3kbyellow open   book        N4ifaCnKSZ-25XQSY-eVYA   5   1          7            1     27.1kb         27.1kbyellow open   customer    FTwjUka-TxeD_U7YAm40hA   5   1          2            0      7.2kb          7.2kbyellow open   addressfile LHFYHXa9R1iBx6-LMy3aSQ   5   1          2            0      4.6kb          4.6kb</pre><h2 id="查询索引settings"><a href="#查询索引settings" class="headerlink" title="查询索引settings"></a>查询索引settings</h2><blockquote><p>curl -XGET ‘localhost:9200/addressfile/_settings?pretty’</p></blockquote><pre>shengl-pro:tmp shengl$ curl -XGET 'localhost:9200/addressfile/_settings?pretty'{  "addressfile" : { # index Name    "settings" : { # settings info      "index" : {         "creation_date" : "1539444600576",        "number_of_shards" : "5",        "number_of_replicas" : "1",        "uuid" : "LHFYHXa9R1iBx6-LMy3aSQ",        "version" : {          "created" : "5050399"        },        "provided_name" : "addressfile"      }    }  }}</pre><h2 id="新建索引及其配置"><a href="#新建索引及其配置" class="headerlink" title="新建索引及其配置"></a>新建索引及其配置</h2><ul><li>创建一个只有主分片没有副本的索引<pre>curl -X PUT "localhost:9200/my_temp_index" -H 'Content-Type: application/json' -d'{  "settings": {      "number_of_shards" :   1,      "number_of_replicas" : 0  }}'</pre></li></ul><h2 id="修改索引Settings"><a href="#修改索引Settings" class="headerlink" title="修改索引Settings"></a>修改索引Settings</h2><ul><li>通过update修改副本数<pre>curl -X PUT "localhost:9200/my_temp_index/_settings" -H 'Content-Type: application/json' -d'{  "number_of_replicas": 1}'</pre></li></ul><h2 id="配置分析器"><a href="#配置分析器" class="headerlink" title="配置分析器"></a>配置分析器</h2><ul><li>standard,通过单词边界分割切词</li><li>standard词汇但愿过滤器,整理分词器触发的语汇但愿</li><li>lowercase,转换为小写</li><li><p>stop删除停用词 ,默认不会被打开</p></li><li><p>创建一个新的分析器</p><pre>curl -X PUT "localhost:9200/spanish_docs" -H 'Content-Type: application/json' -d'{  "settings": {      "analysis": {          "analyzer": {              "es_std": {                  "type":      "standard",                  "stopwords": "_spanish_"              }          }      }  }}'</pre></li></ul><h2 id="自定义分析器"><a href="#自定义分析器" class="headerlink" title="自定义分析器"></a>自定义分析器</h2><ul><li><p>一个分析器组合了三种函数,顺序执行   </p><ul><li><strong>字符过滤器</strong>,整理尚未被分词的字符串,比如HTML格式的网页中的<p>,<div>,且可以吧&amp;Aacute转为对应的真实字符。一个分析器可能有0个或者多个字符过滤器。</div></p></li><li><strong>分词器</strong>,一个分析器必须有一个唯一的分词器。用来分词。</li><li><strong>词单元过滤器</strong>,可以修改，过滤，添加或者移除单元。<pre>template:{"settings": {  "analysis": {      "char_filter": { ... custom character filters ... },      "tokenizer" : { ... custom tokenizer ... },      "filter": { ... custom filter ... },      "analyzer": { ... custom analyzers ... },}</pre></li></ul></li><li><p>示范: 一个HTML分析器</p><pre>curl -X PUT "localhost:9200/my_index" -H 'Content-Type: application/json' -d'{  "settings": {      "analysis": {          "char_filter": {              "&_to_and": {                  "type":       "mapping",                  "mappings": [ "&=> and "]          }},          "filter": {              "my_stopwords": {                  "type":       "stop",                  "stopwords": [ "the", "a" ]          }},          "analyzer": {              "my_analyzer": {                  "type":         "custom",                  "char_filter":  [ "html_strip", "&_to_and" ],                  "tokenizer":    "standard",                  "filter":       [ "lowercase", "my_stopwords" ]          }}}}}'</pre></li><li><p>追加应用分析器</p><pre>curl -X PUT "localhost:9200/my_index/_mapping/my_type" -H 'Content-Type: application/json' -d'{  "properties": {      "title": {          "type":      "string",          "analyzer":  "my_analyzer"      }  }}'</pre></li></ul><h1 id="索引模板"><a href="#索引模板" class="headerlink" title="索引模板"></a>索引模板</h1><h2 id="创建一个索引模板"><a href="#创建一个索引模板" class="headerlink" title="创建一个索引模板"></a>创建一个索引模板</h2><pre>curl -XPUT 'localhost:9200/_template/my_logs' -d '{ #1 创建一个名为my_logs的模板    "template": "logstash-*', #2 应用于所有以logstash-开头的索引    "order": 1, #3 将会覆盖默认的logstash模板,因为默认模板的order更低    "settings": {        "number_of_shards":1 #4 限制主分片数量为1    },    "mappings": {        "_default_": { #5 为所有类型禁用_all            "_all": {                "enabled": false            }        }    },    "aliases": {        "last_3_months": {} #6 添加到last_3_month别名中,别名是最佳实践    }}</pre><pre>shengl-pro:tmp shengl$ curl -XPUT 'localhost:9200/_template/my_logs' -d '{     "template": "logstash-*",      "order": 1,      "settings": {         "number_of_shards":1      },     "mappings": {         "_default_": {              "_all": {                 "enabled": false             }         }     },     "aliases": {         "last_3_months": {}      } }'{"acknowledged":true}</pre><h1 id="Mappings"><a href="#Mappings" class="headerlink" title="Mappings"></a>Mappings</h1><blockquote><p>ES的Mapping比较灵活(相对于关系型数据库中的字段设置+索引还要多),默认会识别类型(当然可能会出错),也可以自己定义(使用分词器,是否分词,是否存储等等)</p></blockquote><h2 id="查询索引的信息"><a href="#查询索引的信息" class="headerlink" title="查询索引的信息"></a>查询索引的信息</h2><ul><li>下列命令会展示索引的所有信息,包括settings和mappings  <blockquote><p>curl -XGET ‘localhost:9200/address/?pretty’</p></blockquote><pre>shengl-pro:tmp shengl$ curl -XGET 'localhost:9200/address/?pretty'{"address" : {  "aliases" : { },  "mappings" : {    "tiny" : {      "properties" : {        "city" : {          "type" : "text",          "fields" : {            "keyword" : {              "type" : "keyword",              "ignore_above" : 256            }          }        },        "country" : {          "type" : "text",          "fields" : {            "keyword" : {              "type" : "keyword",              "ignore_above" : 256            }          }        },        "region" : {          "type" : "text",          "fields" : {            "keyword" : {              "type" : "keyword",              "ignore_above" : 256            }          }        }      }    },    "normal" : {      "properties" : {        "base" : {          "properties" : {            "country" : {              "type" : "text",              "fields" : {                "keyword" : {                  "type" : "keyword",                  "ignore_above" : 256                }              }            }          }        },        "city" : {          "type" : "text",          "fields" : {            "keyword" : {              "type" : "keyword",              "ignore_above" : 256            }          }        },        "country" : {          "type" : "text",          "fields" : {            "keyword" : {              "type" : "keyword",              "ignore_above" : 256            }          }        },        "detail" : {          "properties" : {            "city" : {              "type" : "text",              "fields" : {                "keyword" : {                  "type" : "keyword",                  "ignore_above" : 256                }              }            },            "region" : {              "type" : "text",              "fields" : {                "keyword" : {                  "type" : "keyword",                  "ignore_above" : 256                }              }            }          }        },        "rank" : {          "type" : "long"        },        "region" : {          "type" : "text",          "fields" : {            "keyword" : {              "type" : "keyword",              "ignore_above" : 256            }          }        }      }    }  },  "settings" : {    "index" : {      "creation_date" : "1539435278771",      "number_of_shards" : "5",      "number_of_replicas" : "1",      "uuid" : "EvIdMEAdRd2fSNPK2GXOfw",      "version" : {        "created" : "5050399"      },      "provided_name" : "address"    }  }}}</pre></li></ul><h2 id="创建索引时指定映射"><a href="#创建索引时指定映射" class="headerlink" title="创建索引时指定映射"></a>创建索引时指定映射</h2><p><pre><br>curl -XPUT ‘localhost:9200/blog_post?pretty’ -H ‘Content-Type: application/json’ -d ‘{<br>    “mappings”: {<br>        “user”: {<br>            “_all”:         {“enabled”: false},<br>            “properties”:   {<br>                “title”:    {“type”: “text”},</pre></p><pre><code>            &quot;name&quot;:     {&quot;type&quot;: &quot;text&quot;},            &quot;age&quot;:      {&quot;type&quot;: &quot;integer&quot;}        }    },    &quot;blogpost&quot;:{        &quot;_all&quot;:         {&quot;enabled&quot;: false},        &quot;properties&quot;:   {            &quot;title&quot;:    {&quot;type&quot;: &quot;text&quot; },            &quot;body&quot;:     {&quot;type&quot;: &quot;text&quot; },            &quot;summary&quot;:  {&quot;type&quot;: &quot;text&quot; },            &quot;user_id&quot;:  {&quot;type&quot;: &quot;keyword&quot;},            &quot;created&quot;:  {                &quot;type&quot;: &quot;date&quot;,                &quot;format&quot;: &quot;strict_date_optional_time|| epoch_millis&quot;            }        }    }}</code></pre><p>}’<br></p><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p><p></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;elastic search中的配置和mappings定义了索引的基本配置和数据结构及数据结构的基本配置。其中字段的类型类似于关系型数据库里面的字段映射。&lt;/p&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="学习笔记" scheme="http://blog.xiaoyuyu.net/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Elastic Search" scheme="http://blog.xiaoyuyu.net/tags/Elastic-Search/"/>
    
  </entry>
  
  <entry>
    <title>74-elastic-search索引映射</title>
    <link href="http://blog.xiaoyuyu.net/post/b972e990.html"/>
    <id>http://blog.xiaoyuyu.net/post/b972e990.html</id>
    <published>2018-10-20T00:28:05.000Z</published>
    <updated>2019-09-17T02:52:36.342Z</updated>
    
    <content type="html"><![CDATA[<p>elastic search的映射类似于关系型数据库里面的字段映射。对数据结构的定义。</p><a id="more"></a><ul><li>映射可以分为静态映射和动态映射。</li><li>dynamic属性为 true动态添加字段,false:忽略新字段,strict: 碰到陌生字段抛出异常。</li><li>字段类型<ul><li>string 字符串</li><li>integer 数字</li><li>long 64bit整形</li><li>float 32bit小数</li><li>double 64bit浮点型</li><li>bool 布尔型</li><li>date 日期</li><li>binary 二进制</li></ul></li><li><p>一个示例</p><pre>POST /[indexName]{  "settings": {      "number_of_shards" : 5,      "number_of_replicas" : 1  },  "mappings: {      "books" : { # type          "properties": {              "title":{                  "type":"string"              },              "name": {                  "type":"string",                  "index":"not_analyzed"              },              "publish_date": {                  "type":"date",                  "index":"not_analyzed"              },              "number": {                  "type":"object",                  "dynamic": true              }          }      }  }}                                    </pre></li><li><p>获取映射</p><blockquote><p>GET [indexName]/_mapping</p></blockquote></li><li>获取index为library,type为books的映射<blockquote><p>GET library/_mapping/books</p></blockquote></li><li>获取集群内所有的映射信息<blockquote><p>GET /_all/_mapping/</p></blockquote></li><li>获取集群内多个映射信息<blockquote><p>GET /_all/_mapping/books,bank_account</p></blockquote></li><li>删除映射和以上相同<blockquote><p>DELETE /library/books<br>DELETE /library/bookes/_mapping<br>DELETE /library/_mapping/book, bank_account</p></blockquote></li><li>无法修改已经存在的mapping映射<ul><li>重新建立一个索引，然后重新定义映射</li><li>把之前索引里的数据导入到新的索引里。</li></ul></li><li>修改索引动作<ul><li>运行 PUT /[现有indexName]/_alias/[indexAliasName]</li><li>新建一个索引,定义好新的映射</li><li>别名指向新索引<pre>POST /_aliases{  "actions":[      {"remove" : {"index":"现有indexName","alias":"indexAliasName"}},      {"add": {"index":"新索引Name","alias":"indexAliasName"}}  ]}</pre> </li></ul></li><li>修改字段只能通过新建索引的方式<ul><li>先创建索引，修改字段<pre>PUT [indexName]{  "mappings": {      "typeName":{          "properties": {              "date" {                  "type":"date",                  "format": "yyyy-MM-dd"              }          }      }  }}</pre></li><li>将数据复制过去<br><pre><br>POST _reindex<br>{<br>  “source”:{<pre><code>&quot;index&quot;: &quot;metricbeat-*&quot;(老索引名)</code></pre>  },<br>  “dest”: {<pre><code>&quot;index&quot;: &quot;metricbeat&quot; (新索引名)</code></pre>  }<br>}<br></pre><p><!--<span id="busuanzi_container_page_pv">阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;elastic search的映射类似于关系型数据库里面的字段映射。对数据结构的定义。&lt;/p&gt;
    
    </summary>
    
      <category term="术业专攻" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%9A%E4%B8%93%E6%94%BB/"/>
    
    
      <category term="学习笔记" scheme="http://blog.xiaoyuyu.net/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Elastic Search" scheme="http://blog.xiaoyuyu.net/tags/Elastic-Search/"/>
    
  </entry>
  
  <entry>
    <title>73-金字塔原理-读书笔记</title>
    <link href="http://blog.xiaoyuyu.net/post/55f1049a.html"/>
    <id>http://blog.xiaoyuyu.net/post/55f1049a.html</id>
    <published>2018-10-16T15:25:25.000Z</published>
    <updated>2019-09-17T02:52:36.341Z</updated>
    
    <content type="html"><![CDATA[<p>如何系统的写作和表达？运用金字塔原理。本文就尝试用金字塔原理来构建。</p><a id="more"></a><h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近开始读书和写字，由于需要更好的学习，开始研究这两者的方法论，关于如何读书，个人已经有一些方法。但是关于如何写作，之前更多的是靠文艺的灵感。作为一个科技和科普的博客（而不是小说家），选定了《金字塔原理》这本书，来指导我的写作思路和逻辑。（其实这里把SCQA)都交待完了。</p><h2 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h2><p>正如背景中提到的，我需要更加严谨的思路来表达我最近学习到的诸多方法论。而不是之前的文章中徒有的那些形式。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>如何提升自己的逻辑思维能力，演讲材料和汇报材料的组织能力呢？</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p>金字塔原理是我找寻到并决定研究的诸多方法论中最有名的一个。</p><h1 id="构思"><a href="#构思" class="headerlink" title="构思"></a>构思</h1><p>构思的过程中，这篇文章应该取名为，《金字塔原理读书笔记》——&gt; 如何使用金字塔原理构造你的逻辑思维及写作汇报材料的骨架。</p><h1 id="搭框架"><a href="#搭框架" class="headerlink" title="搭框架"></a>搭框架</h1><h2 id="时间顺序"><a href="#时间顺序" class="headerlink" title="时间顺序"></a>时间顺序</h2><h2 id="空间顺序"><a href="#空间顺序" class="headerlink" title="空间顺序"></a>空间顺序</h2><h2 id="程度顺序"><a href="#程度顺序" class="headerlink" title="程度顺序"></a>程度顺序</h2><h1 id="定内容"><a href="#定内容" class="headerlink" title="定内容"></a>定内容</h1><h2 id="观点"><a href="#观点" class="headerlink" title="观点"></a>观点</h2><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p><!--<span id="busuanzi_container_page_pv">   阅读量<span id="busuanzi_value_page_pv"></span>次</span>--></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何系统的写作和表达？运用金字塔原理。本文就尝试用金字塔原理来构建。&lt;/p&gt;
    
    </summary>
    
      <category term="术与道" scheme="http://blog.xiaoyuyu.net/categories/%E6%9C%AF%E4%B8%8E%E9%81%93/"/>
    
    
      <category term="方法论" scheme="http://blog.xiaoyuyu.net/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
      <category term="他山之石" scheme="http://blog.xiaoyuyu.net/tags/%E4%BB%96%E5%B1%B1%E4%B9%8B%E7%9F%B3/"/>
    
  </entry>
  
</feed>
